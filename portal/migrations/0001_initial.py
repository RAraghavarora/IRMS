# Generated by Django 2.2.1 on 2019-05-28 08:31

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Accountlines',
            fields=[
                ('accountlines_id', models.AutoField(primary_key=True, serialize=False)),
                ('issue_id', models.IntegerField(blank=True, null=True)),
                ('accountno', models.SmallIntegerField()),
                ('date', models.DateField(blank=True, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('accounttype', models.CharField(blank=True, max_length=5, null=True)),
                ('payment_type', models.CharField(blank=True, max_length=80, null=True)),
                ('amountoutstanding', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('lastincrement', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('timestamp', models.DateTimeField()),
                ('note', models.TextField(blank=True, null=True)),
                ('manager_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'accountlines',
            },
        ),
        migrations.CreateModel(
            name='AccountOffsetTypes',
            fields=[
                ('type', models.CharField(max_length=16, primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'account_offset_types',
            },
        ),
        migrations.CreateModel(
            name='ActionLogs',
            fields=[
                ('action_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('user', models.IntegerField()),
                ('module', models.TextField(blank=True, null=True)),
                ('action', models.TextField(blank=True, null=True)),
                ('object', models.IntegerField(blank=True, null=True)),
                ('info', models.TextField(blank=True, null=True)),
                ('interface', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'action_logs',
            },
        ),
        migrations.CreateModel(
            name='AdditionalFields',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tablename', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('authorised_value_category', models.CharField(max_length=16)),
                ('marcfield', models.CharField(max_length=16)),
                ('searchable', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'additional_fields',
            },
        ),
        migrations.CreateModel(
            name='AdditionalFieldValues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_id', models.IntegerField()),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'additional_field_values',
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('alertid', models.AutoField(primary_key=True, serialize=False)),
                ('borrowernumber', models.IntegerField()),
                ('type', models.CharField(max_length=10)),
                ('externalid', models.CharField(max_length=20)),
            ],
            options={
                'managed': False,
                'db_table': 'alert',
            },
        ),
        migrations.CreateModel(
            name='ApiKeys',
            fields=[
                ('client_id', models.CharField(max_length=191, primary_key=True, serialize=False)),
                ('secret', models.CharField(max_length=191, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('active', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'api_keys',
            },
        ),
        migrations.CreateModel(
            name='Aqbasket',
            fields=[
                ('basketno', models.AutoField(primary_key=True, serialize=False)),
                ('basketname', models.CharField(blank=True, max_length=50, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('booksellernote', models.TextField(blank=True, null=True)),
                ('creationdate', models.DateField(blank=True, null=True)),
                ('closedate', models.DateField(blank=True, null=True)),
                ('authorisedby', models.CharField(blank=True, max_length=10, null=True)),
                ('booksellerinvoicenumber', models.TextField(blank=True, null=True)),
                ('deliveryplace', models.CharField(blank=True, max_length=10, null=True)),
                ('billingplace', models.CharField(blank=True, max_length=10, null=True)),
                ('is_standing', models.IntegerField()),
                ('create_items', models.CharField(blank=True, max_length=11, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'aqbasket',
            },
        ),
        migrations.CreateModel(
            name='Aqbasketgroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('closed', models.IntegerField(blank=True, null=True)),
                ('deliveryplace', models.CharField(blank=True, max_length=10, null=True)),
                ('freedeliveryplace', models.TextField(blank=True, null=True)),
                ('deliverycomment', models.CharField(blank=True, max_length=255, null=True)),
                ('billingplace', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'aqbasketgroups',
            },
        ),
        migrations.CreateModel(
            name='Aqbooksellers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('address1', models.TextField(blank=True, null=True)),
                ('address2', models.TextField(blank=True, null=True)),
                ('address3', models.TextField(blank=True, null=True)),
                ('address4', models.TextField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=30, null=True)),
                ('accountnumber', models.TextField(blank=True, null=True)),
                ('othersupplier', models.TextField(blank=True, null=True)),
                ('currency', models.CharField(max_length=10)),
                ('booksellerfax', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('bookselleremail', models.TextField(blank=True, null=True)),
                ('booksellerurl', models.TextField(blank=True, null=True)),
                ('postal', models.TextField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.IntegerField(blank=True, null=True)),
                ('gstreg', models.IntegerField(blank=True, null=True)),
                ('listincgst', models.IntegerField(blank=True, null=True)),
                ('invoiceincgst', models.IntegerField(blank=True, null=True)),
                ('tax_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('discount', models.FloatField(blank=True, null=True)),
                ('fax', models.CharField(blank=True, max_length=50, null=True)),
                ('deliverytime', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'aqbooksellers',
            },
        ),
        migrations.CreateModel(
            name='Aqbudgetperiods',
            fields=[
                ('budget_period_id', models.AutoField(primary_key=True, serialize=False)),
                ('budget_period_startdate', models.DateField()),
                ('budget_period_enddate', models.DateField()),
                ('budget_period_active', models.IntegerField(blank=True, null=True)),
                ('budget_period_description', models.TextField(blank=True, null=True)),
                ('budget_period_total', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('budget_period_locked', models.IntegerField(blank=True, null=True)),
                ('sort1_authcat', models.CharField(blank=True, max_length=10, null=True)),
                ('sort2_authcat', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'aqbudgetperiods',
            },
        ),
        migrations.CreateModel(
            name='Aqbudgets',
            fields=[
                ('budget_id', models.AutoField(primary_key=True, serialize=False)),
                ('budget_parent_id', models.IntegerField(blank=True, null=True)),
                ('budget_code', models.CharField(blank=True, max_length=30, null=True)),
                ('budget_name', models.CharField(blank=True, max_length=80, null=True)),
                ('budget_branchcode', models.CharField(blank=True, max_length=10, null=True)),
                ('budget_amount', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('budget_encumb', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('budget_expend', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('budget_notes', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField()),
                ('budget_period_id', models.IntegerField(blank=True, null=True)),
                ('sort1_authcat', models.CharField(blank=True, max_length=80, null=True)),
                ('sort2_authcat', models.CharField(blank=True, max_length=80, null=True)),
                ('budget_owner_id', models.IntegerField(blank=True, null=True)),
                ('budget_permission', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'aqbudgets',
            },
        ),
        migrations.CreateModel(
            name='AqbudgetsPlanning',
            fields=[
                ('plan_id', models.AutoField(primary_key=True, serialize=False)),
                ('budget_period_id', models.IntegerField()),
                ('estimated_amount', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('authcat', models.CharField(max_length=30)),
                ('authvalue', models.CharField(max_length=30)),
                ('display', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'aqbudgets_planning',
            },
        ),
        migrations.CreateModel(
            name='Aqcontacts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('position', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=100, null=True)),
                ('altphone', models.CharField(blank=True, max_length=100, null=True)),
                ('fax', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('orderacquisition', models.IntegerField()),
                ('claimacquisition', models.IntegerField()),
                ('claimissues', models.IntegerField()),
                ('acqprimary', models.IntegerField()),
                ('serialsprimary', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'aqcontacts',
            },
        ),
        migrations.CreateModel(
            name='Aqcontract',
            fields=[
                ('contractnumber', models.AutoField(primary_key=True, serialize=False)),
                ('contractstartdate', models.DateField(blank=True, null=True)),
                ('contractenddate', models.DateField(blank=True, null=True)),
                ('contractname', models.CharField(blank=True, max_length=50, null=True)),
                ('contractdescription', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'aqcontract',
            },
        ),
        migrations.CreateModel(
            name='AqinvoiceAdjustments',
            fields=[
                ('adjustment_id', models.AutoField(primary_key=True, serialize=False)),
                ('adjustment', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('reason', models.CharField(blank=True, max_length=80, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('encumber_open', models.SmallIntegerField()),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'aqinvoice_adjustments',
            },
        ),
        migrations.CreateModel(
            name='Aqinvoices',
            fields=[
                ('invoiceid', models.AutoField(primary_key=True, serialize=False)),
                ('invoicenumber', models.TextField()),
                ('shipmentdate', models.DateField(blank=True, null=True)),
                ('billingdate', models.DateField(blank=True, null=True)),
                ('closedate', models.DateField(blank=True, null=True)),
                ('shipmentcost', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'aqinvoices',
            },
        ),
        migrations.CreateModel(
            name='Aqorders',
            fields=[
                ('ordernumber', models.AutoField(primary_key=True, serialize=False)),
                ('entrydate', models.DateField(blank=True, null=True)),
                ('quantity', models.SmallIntegerField(blank=True, null=True)),
                ('listprice', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('datereceived', models.DateField(blank=True, null=True)),
                ('freight', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('unitprice', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('unitprice_tax_excluded', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('unitprice_tax_included', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('quantityreceived', models.SmallIntegerField()),
                ('datecancellationprinted', models.DateField(blank=True, null=True)),
                ('cancellationreason', models.TextField(blank=True, null=True)),
                ('order_internalnote', models.TextField(blank=True, null=True)),
                ('order_vendornote', models.TextField(blank=True, null=True)),
                ('purchaseordernumber', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField()),
                ('rrp', models.DecimalField(blank=True, decimal_places=2, max_digits=13, null=True)),
                ('replacementprice', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('rrp_tax_excluded', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('rrp_tax_included', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('ecost', models.DecimalField(blank=True, decimal_places=2, max_digits=13, null=True)),
                ('ecost_tax_excluded', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('ecost_tax_included', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('tax_rate_bak', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('tax_rate_on_ordering', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('tax_rate_on_receiving', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('tax_value_bak', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('tax_value_on_ordering', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('tax_value_on_receiving', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('discount', models.FloatField(blank=True, null=True)),
                ('budgetdate', models.DateField(blank=True, null=True)),
                ('sort1', models.CharField(blank=True, max_length=80, null=True)),
                ('sort2', models.CharField(blank=True, max_length=80, null=True)),
                ('sort1_authcat', models.CharField(blank=True, max_length=10, null=True)),
                ('sort2_authcat', models.CharField(blank=True, max_length=10, null=True)),
                ('uncertainprice', models.IntegerField(blank=True, null=True)),
                ('claims_count', models.IntegerField(blank=True, null=True)),
                ('claimed_date', models.DateField(blank=True, null=True)),
                ('parent_ordernumber', models.IntegerField(blank=True, null=True)),
                ('orderstatus', models.CharField(blank=True, max_length=16, null=True)),
                ('line_item_id', models.CharField(blank=True, max_length=35, null=True)),
                ('suppliers_reference_number', models.CharField(blank=True, max_length=35, null=True)),
                ('suppliers_reference_qualifier', models.CharField(blank=True, max_length=3, null=True)),
                ('suppliers_report', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'aqorders',
            },
        ),
        migrations.CreateModel(
            name='AqordersItems',
            fields=[
                ('itemnumber', models.IntegerField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'aqorders_items',
            },
        ),
        migrations.CreateModel(
            name='AqordersTransfers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'aqorders_transfers',
            },
        ),
        migrations.CreateModel(
            name='ArticleRequests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, null=True)),
                ('author', models.TextField(blank=True, null=True)),
                ('volume', models.TextField(blank=True, null=True)),
                ('issue', models.TextField(blank=True, null=True)),
                ('date', models.TextField(blank=True, null=True)),
                ('pages', models.TextField(blank=True, null=True)),
                ('chapters', models.TextField(blank=True, null=True)),
                ('patron_notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(max_length=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField()),
                ('updated_on', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'article_requests',
            },
        ),
        migrations.CreateModel(
            name='AudioAlerts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('precedence', models.PositiveSmallIntegerField()),
                ('selector', models.CharField(max_length=255)),
                ('sound', models.CharField(max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'audio_alerts',
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'auth_group',
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'auth_group_permissions',
            },
        ),
        migrations.CreateModel(
            name='AuthHeader',
            fields=[
                ('authid', models.BigAutoField(primary_key=True, serialize=False)),
                ('authtypecode', models.CharField(max_length=10)),
                ('datecreated', models.DateField(blank=True, null=True)),
                ('modification_time', models.DateTimeField()),
                ('origincode', models.CharField(blank=True, max_length=20, null=True)),
                ('authtrees', models.TextField(blank=True, null=True)),
                ('marc', models.TextField(blank=True, null=True)),
                ('linkid', models.BigIntegerField(blank=True, null=True)),
                ('marcxml', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'auth_header',
            },
        ),
        migrations.CreateModel(
            name='AuthorisedValueCategories',
            fields=[
                ('category_name', models.CharField(max_length=32, primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'authorised_value_categories',
            },
        ),
        migrations.CreateModel(
            name='AuthorisedValues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authorised_value', models.CharField(max_length=80)),
                ('lib', models.CharField(blank=True, max_length=200, null=True)),
                ('lib_opac', models.CharField(blank=True, max_length=200, null=True)),
                ('imageurl', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'authorised_values',
            },
        ),
        migrations.CreateModel(
            name='AuthorisedValuesBranches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'authorised_values_branches',
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'auth_permission',
            },
        ),
        migrations.CreateModel(
            name='AuthTypes',
            fields=[
                ('authtypecode', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('authtypetext', models.CharField(max_length=255)),
                ('auth_tag_to_report', models.CharField(max_length=3)),
                ('summary', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'auth_types',
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'auth_user',
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'auth_user_groups',
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'auth_user_user_permissions',
            },
        ),
        migrations.CreateModel(
            name='Biblio',
            fields=[
                ('biblionumber', models.AutoField(primary_key=True, serialize=False)),
                ('frameworkcode', models.CharField(max_length=4)),
                ('author', models.TextField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('unititle', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('serial', models.IntegerField(blank=True, null=True)),
                ('seriestitle', models.TextField(blank=True, null=True)),
                ('copyrightdate', models.SmallIntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField()),
                ('datecreated', models.DateField()),
                ('abstract', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'biblio',
            },
        ),
        migrations.CreateModel(
            name='BiblioFramework',
            fields=[
                ('frameworkcode', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('frameworktext', models.CharField(max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'biblio_framework',
            },
        ),
        migrations.CreateModel(
            name='Biblioimages',
            fields=[
                ('imagenumber', models.AutoField(primary_key=True, serialize=False)),
                ('mimetype', models.CharField(max_length=15)),
                ('imagefile', models.TextField()),
                ('thumbnail', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'biblioimages',
            },
        ),
        migrations.CreateModel(
            name='Biblioitems',
            fields=[
                ('biblioitemnumber', models.AutoField(primary_key=True, serialize=False)),
                ('volume', models.TextField(blank=True, null=True)),
                ('number', models.TextField(blank=True, null=True)),
                ('itemtype', models.CharField(blank=True, max_length=10, null=True)),
                ('isbn', models.TextField(blank=True, null=True)),
                ('issn', models.TextField(blank=True, null=True)),
                ('ean', models.TextField(blank=True, null=True)),
                ('publicationyear', models.TextField(blank=True, null=True)),
                ('publishercode', models.CharField(blank=True, max_length=255, null=True)),
                ('volumedate', models.DateField(blank=True, null=True)),
                ('volumedesc', models.TextField(blank=True, null=True)),
                ('collectiontitle', models.TextField(blank=True, null=True)),
                ('collectionissn', models.TextField(blank=True, null=True)),
                ('collectionvolume', models.TextField(blank=True, null=True)),
                ('editionstatement', models.TextField(blank=True, null=True)),
                ('editionresponsibility', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField()),
                ('illus', models.CharField(blank=True, max_length=255, null=True)),
                ('pages', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('size', models.CharField(blank=True, max_length=255, null=True)),
                ('place', models.CharField(blank=True, max_length=255, null=True)),
                ('lccn', models.CharField(blank=True, max_length=25, null=True)),
                ('url', models.TextField(blank=True, null=True)),
                ('cn_source', models.CharField(blank=True, max_length=10, null=True)),
                ('cn_class', models.CharField(blank=True, max_length=30, null=True)),
                ('cn_item', models.CharField(blank=True, max_length=10, null=True)),
                ('cn_suffix', models.CharField(blank=True, max_length=10, null=True)),
                ('cn_sort', models.CharField(blank=True, max_length=255, null=True)),
                ('agerestriction', models.CharField(blank=True, max_length=255, null=True)),
                ('totalissues', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'biblioitems',
            },
        ),
        migrations.CreateModel(
            name='BiblioMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('format', models.CharField(max_length=16)),
                ('marcflavour', models.CharField(max_length=16)),
                ('metadata', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'biblio_metadata',
            },
        ),
        migrations.CreateModel(
            name='BorrowerAttributes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'borrower_attributes',
            },
        ),
        migrations.CreateModel(
            name='BorrowerAttributeTypes',
            fields=[
                ('code', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255)),
                ('repeatable', models.IntegerField()),
                ('unique_id', models.IntegerField()),
                ('opac_display', models.IntegerField()),
                ('opac_editable', models.IntegerField()),
                ('staff_searchable', models.IntegerField()),
                ('authorised_value_category', models.CharField(blank=True, max_length=32, null=True)),
                ('display_checkout', models.IntegerField()),
                ('category_code', models.CharField(blank=True, max_length=10, null=True)),
                ('class_field', models.CharField(db_column='class', max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'borrower_attribute_types',
            },
        ),
        migrations.CreateModel(
            name='BorrowerAttributeTypesBranches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'borrower_attribute_types_branches',
            },
        ),
        migrations.CreateModel(
            name='BorrowerDebarments',
            fields=[
                ('borrower_debarment_id', models.AutoField(primary_key=True, serialize=False)),
                ('expiration', models.DateField(blank=True, null=True)),
                ('type', models.CharField(max_length=10)),
                ('comment', models.TextField(blank=True, null=True)),
                ('manager_id', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'borrower_debarments',
            },
        ),
        migrations.CreateModel(
            name='BorrowerFiles',
            fields=[
                ('file_id', models.AutoField(primary_key=True, serialize=False)),
                ('file_name', models.CharField(max_length=255)),
                ('file_type', models.CharField(max_length=255)),
                ('file_description', models.CharField(blank=True, max_length=255, null=True)),
                ('file_content', models.TextField()),
                ('date_uploaded', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'borrower_files',
            },
        ),
        migrations.CreateModel(
            name='BorrowerMessagePreferences',
            fields=[
                ('borrower_message_preference_id', models.AutoField(primary_key=True, serialize=False)),
                ('days_in_advance', models.IntegerField(blank=True, null=True)),
                ('wants_digest', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'borrower_message_preferences',
            },
        ),
        migrations.CreateModel(
            name='BorrowerModifications',
            fields=[
                ('timestamp', models.DateTimeField()),
                ('verification_token', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('borrowernumber', models.IntegerField()),
                ('cardnumber', models.CharField(blank=True, max_length=32, null=True)),
                ('surname', models.TextField(blank=True, null=True)),
                ('firstname', models.TextField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('othernames', models.TextField(blank=True, null=True)),
                ('initials', models.TextField(blank=True, null=True)),
                ('streetnumber', models.CharField(blank=True, max_length=10, null=True)),
                ('streettype', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('address2', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=25, null=True)),
                ('country', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('phone', models.TextField(blank=True, null=True)),
                ('mobile', models.CharField(blank=True, max_length=50, null=True)),
                ('fax', models.TextField(blank=True, null=True)),
                ('emailpro', models.TextField(blank=True, null=True)),
                ('phonepro', models.TextField(blank=True, null=True)),
                ('b_streetnumber', models.CharField(blank=True, db_column='B_streetnumber', max_length=10, null=True)),
                ('b_streettype', models.CharField(blank=True, db_column='B_streettype', max_length=50, null=True)),
                ('b_address', models.CharField(blank=True, db_column='B_address', max_length=100, null=True)),
                ('b_address2', models.TextField(blank=True, db_column='B_address2', null=True)),
                ('b_city', models.TextField(blank=True, db_column='B_city', null=True)),
                ('b_state', models.TextField(blank=True, db_column='B_state', null=True)),
                ('b_zipcode', models.CharField(blank=True, db_column='B_zipcode', max_length=25, null=True)),
                ('b_country', models.TextField(blank=True, db_column='B_country', null=True)),
                ('b_email', models.TextField(blank=True, db_column='B_email', null=True)),
                ('b_phone', models.TextField(blank=True, db_column='B_phone', null=True)),
                ('dateofbirth', models.DateField(blank=True, null=True)),
                ('branchcode', models.CharField(blank=True, max_length=10, null=True)),
                ('categorycode', models.CharField(blank=True, max_length=10, null=True)),
                ('dateenrolled', models.DateField(blank=True, null=True)),
                ('dateexpiry', models.DateField(blank=True, null=True)),
                ('date_renewed', models.DateField(blank=True, null=True)),
                ('gonenoaddress', models.IntegerField(blank=True, null=True)),
                ('lost', models.IntegerField(blank=True, null=True)),
                ('debarred', models.DateField(blank=True, null=True)),
                ('debarredcomment', models.CharField(blank=True, max_length=255, null=True)),
                ('contactname', models.TextField(blank=True, null=True)),
                ('contactfirstname', models.TextField(blank=True, null=True)),
                ('contacttitle', models.TextField(blank=True, null=True)),
                ('guarantorid', models.IntegerField(blank=True, null=True)),
                ('borrowernotes', models.TextField(blank=True, null=True)),
                ('relationship', models.CharField(blank=True, max_length=100, null=True)),
                ('sex', models.CharField(blank=True, max_length=1, null=True)),
                ('password', models.CharField(blank=True, max_length=30, null=True)),
                ('flags', models.IntegerField(blank=True, null=True)),
                ('userid', models.CharField(blank=True, max_length=75, null=True)),
                ('opacnote', models.TextField(blank=True, null=True)),
                ('contactnote', models.CharField(blank=True, max_length=255, null=True)),
                ('sort1', models.CharField(blank=True, max_length=80, null=True)),
                ('sort2', models.CharField(blank=True, max_length=80, null=True)),
                ('altcontactfirstname', models.CharField(blank=True, max_length=255, null=True)),
                ('altcontactsurname', models.CharField(blank=True, max_length=255, null=True)),
                ('altcontactaddress1', models.CharField(blank=True, max_length=255, null=True)),
                ('altcontactaddress2', models.CharField(blank=True, max_length=255, null=True)),
                ('altcontactaddress3', models.CharField(blank=True, max_length=255, null=True)),
                ('altcontactstate', models.TextField(blank=True, null=True)),
                ('altcontactzipcode', models.CharField(blank=True, max_length=50, null=True)),
                ('altcontactcountry', models.TextField(blank=True, null=True)),
                ('altcontactphone', models.CharField(blank=True, max_length=50, null=True)),
                ('smsalertnumber', models.CharField(blank=True, max_length=50, null=True)),
                ('privacy', models.IntegerField(blank=True, null=True)),
                ('extended_attributes', models.TextField(blank=True, null=True)),
                ('gdpr_proc_consent', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'borrower_modifications',
            },
        ),
        migrations.CreateModel(
            name='BorrowerPasswordRecovery',
            fields=[
                ('borrowernumber', models.IntegerField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(max_length=128)),
                ('valid_until', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'borrower_password_recovery',
            },
        ),
        migrations.CreateModel(
            name='Borrowers',
            fields=[
                ('borrowernumber', models.AutoField(primary_key=True, serialize=False)),
                ('cardnumber', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('surname', models.TextField(blank=True, null=True)),
                ('firstname', models.TextField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('othernames', models.TextField(blank=True, null=True)),
                ('initials', models.TextField(blank=True, null=True)),
                ('streetnumber', models.CharField(blank=True, max_length=10, null=True)),
                ('streettype', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('address2', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=25, null=True)),
                ('country', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('phone', models.TextField(blank=True, null=True)),
                ('mobile', models.CharField(blank=True, max_length=50, null=True)),
                ('fax', models.TextField(blank=True, null=True)),
                ('emailpro', models.TextField(blank=True, null=True)),
                ('phonepro', models.TextField(blank=True, null=True)),
                ('b_streetnumber', models.CharField(blank=True, db_column='B_streetnumber', max_length=10, null=True)),
                ('b_streettype', models.CharField(blank=True, db_column='B_streettype', max_length=50, null=True)),
                ('b_address', models.CharField(blank=True, db_column='B_address', max_length=100, null=True)),
                ('b_address2', models.TextField(blank=True, db_column='B_address2', null=True)),
                ('b_city', models.TextField(blank=True, db_column='B_city', null=True)),
                ('b_state', models.TextField(blank=True, db_column='B_state', null=True)),
                ('b_zipcode', models.CharField(blank=True, db_column='B_zipcode', max_length=25, null=True)),
                ('b_country', models.TextField(blank=True, db_column='B_country', null=True)),
                ('b_email', models.TextField(blank=True, db_column='B_email', null=True)),
                ('b_phone', models.TextField(blank=True, db_column='B_phone', null=True)),
                ('dateofbirth', models.DateField(blank=True, null=True)),
                ('dateenrolled', models.DateField(blank=True, null=True)),
                ('dateexpiry', models.DateField(blank=True, null=True)),
                ('date_renewed', models.DateField(blank=True, null=True)),
                ('gonenoaddress', models.IntegerField(blank=True, null=True)),
                ('lost', models.IntegerField(blank=True, null=True)),
                ('debarred', models.DateField(blank=True, null=True)),
                ('debarredcomment', models.CharField(blank=True, max_length=255, null=True)),
                ('contactname', models.TextField(blank=True, null=True)),
                ('contactfirstname', models.TextField(blank=True, null=True)),
                ('contacttitle', models.TextField(blank=True, null=True)),
                ('guarantorid', models.IntegerField(blank=True, null=True)),
                ('borrowernotes', models.TextField(blank=True, null=True)),
                ('relationship', models.CharField(blank=True, max_length=100, null=True)),
                ('sex', models.CharField(blank=True, max_length=1, null=True)),
                ('password', models.CharField(blank=True, max_length=60, null=True)),
                ('flags', models.IntegerField(blank=True, null=True)),
                ('userid', models.CharField(blank=True, max_length=75, null=True, unique=True)),
                ('opacnote', models.TextField(blank=True, null=True)),
                ('contactnote', models.CharField(blank=True, max_length=255, null=True)),
                ('sort1', models.CharField(blank=True, max_length=80, null=True)),
                ('sort2', models.CharField(blank=True, max_length=80, null=True)),
                ('altcontactfirstname', models.CharField(blank=True, max_length=255, null=True)),
                ('altcontactsurname', models.CharField(blank=True, max_length=255, null=True)),
                ('altcontactaddress1', models.CharField(blank=True, max_length=255, null=True)),
                ('altcontactaddress2', models.CharField(blank=True, max_length=255, null=True)),
                ('altcontactaddress3', models.CharField(blank=True, max_length=255, null=True)),
                ('altcontactstate', models.TextField(blank=True, null=True)),
                ('altcontactzipcode', models.CharField(blank=True, max_length=50, null=True)),
                ('altcontactcountry', models.TextField(blank=True, null=True)),
                ('altcontactphone', models.CharField(blank=True, max_length=50, null=True)),
                ('smsalertnumber', models.CharField(blank=True, max_length=50, null=True)),
                ('privacy', models.IntegerField()),
                ('privacy_guarantor_checkouts', models.IntegerField()),
                ('checkprevcheckout', models.CharField(max_length=7)),
                ('updated_on', models.DateTimeField()),
                ('lastseen', models.DateTimeField(blank=True, null=True)),
                ('lang', models.CharField(max_length=25)),
                ('login_attempts', models.IntegerField(blank=True, null=True)),
                ('overdrive_auth_token', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'borrowers',
            },
        ),
        migrations.CreateModel(
            name='Branches',
            fields=[
                ('branchcode', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('branchname', models.TextField()),
                ('branchaddress1', models.TextField(blank=True, null=True)),
                ('branchaddress2', models.TextField(blank=True, null=True)),
                ('branchaddress3', models.TextField(blank=True, null=True)),
                ('branchzip', models.CharField(blank=True, max_length=25, null=True)),
                ('branchcity', models.TextField(blank=True, null=True)),
                ('branchstate', models.TextField(blank=True, null=True)),
                ('branchcountry', models.TextField(blank=True, null=True)),
                ('branchphone', models.TextField(blank=True, null=True)),
                ('branchfax', models.TextField(blank=True, null=True)),
                ('branchemail', models.TextField(blank=True, null=True)),
                ('branchreplyto', models.TextField(blank=True, null=True)),
                ('branchreturnpath', models.TextField(blank=True, null=True)),
                ('branchurl', models.TextField(blank=True, null=True)),
                ('issuing', models.IntegerField(blank=True, null=True)),
                ('branchip', models.CharField(blank=True, max_length=15, null=True)),
                ('branchprinter', models.CharField(blank=True, max_length=100, null=True)),
                ('branchnotes', models.TextField(blank=True, null=True)),
                ('opac_info', models.TextField(blank=True, null=True)),
                ('geolocation', models.CharField(blank=True, max_length=255, null=True)),
                ('marcorgcode', models.CharField(blank=True, max_length=16, null=True)),
                ('pickup_location', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'branches',
            },
        ),
        migrations.CreateModel(
            name='BranchTransferLimits',
            fields=[
                ('limitid', models.AutoField(db_column='limitId', primary_key=True, serialize=False)),
                ('tobranch', models.CharField(db_column='toBranch', max_length=10)),
                ('frombranch', models.CharField(db_column='fromBranch', max_length=10)),
                ('itemtype', models.CharField(blank=True, max_length=10, null=True)),
                ('ccode', models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'branch_transfer_limits',
            },
        ),
        migrations.CreateModel(
            name='Branchtransfers',
            fields=[
                ('branchtransfer_id', models.AutoField(primary_key=True, serialize=False)),
                ('datesent', models.DateTimeField(blank=True, null=True)),
                ('datearrived', models.DateTimeField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'branchtransfers',
            },
        ),
        migrations.CreateModel(
            name='Browser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
                ('classification', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=255)),
                ('number', models.BigIntegerField()),
                ('endnode', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'browser',
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('categorycode', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('enrolmentperiod', models.SmallIntegerField(blank=True, null=True)),
                ('enrolmentperioddate', models.DateField(blank=True, null=True)),
                ('upperagelimit', models.SmallIntegerField(blank=True, null=True)),
                ('dateofbirthrequired', models.IntegerField(blank=True, null=True)),
                ('finetype', models.CharField(blank=True, max_length=30, null=True)),
                ('bulk', models.IntegerField(blank=True, null=True)),
                ('enrolmentfee', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('overduenoticerequired', models.IntegerField(blank=True, null=True)),
                ('issuelimit', models.SmallIntegerField(blank=True, null=True)),
                ('reservefee', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('hidelostitems', models.IntegerField()),
                ('category_type', models.CharField(max_length=1)),
                ('blockexpiredpatronopacactions', models.IntegerField(db_column='BlockExpiredPatronOpacActions')),
                ('default_privacy', models.CharField(max_length=7)),
                ('checkprevcheckout', models.CharField(max_length=7)),
            ],
            options={
                'managed': False,
                'db_table': 'categories',
            },
        ),
        migrations.CreateModel(
            name='CategoriesBranches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'categories_branches',
            },
        ),
        migrations.CreateModel(
            name='CirculationRules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_name', models.CharField(max_length=32)),
                ('rule_value', models.CharField(max_length=32)),
            ],
            options={
                'managed': False,
                'db_table': 'circulation_rules',
            },
        ),
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('cityid', models.AutoField(primary_key=True, serialize=False)),
                ('city_name', models.CharField(max_length=100)),
                ('city_state', models.CharField(blank=True, max_length=100, null=True)),
                ('city_country', models.CharField(blank=True, max_length=100, null=True)),
                ('city_zipcode', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'cities',
            },
        ),
        migrations.CreateModel(
            name='ClassSortRules',
            fields=[
                ('class_sort_rule', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('sort_routine', models.CharField(max_length=30)),
            ],
            options={
                'managed': False,
                'db_table': 'class_sort_rules',
            },
        ),
        migrations.CreateModel(
            name='ClassSources',
            fields=[
                ('cn_source', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('used', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'class_sources',
            },
        ),
        migrations.CreateModel(
            name='ClassSplitRules',
            fields=[
                ('class_split_rule', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('split_routine', models.CharField(max_length=30)),
                ('split_regex', models.CharField(max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'class_split_rules',
            },
        ),
        migrations.CreateModel(
            name='ClubEnrollmentFields',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'club_enrollment_fields',
            },
        ),
        migrations.CreateModel(
            name='ClubEnrollments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_enrolled', models.DateTimeField()),
                ('date_canceled', models.DateTimeField(blank=True, null=True)),
                ('date_created', models.DateTimeField(blank=True, null=True)),
                ('date_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'club_enrollments',
            },
        ),
        migrations.CreateModel(
            name='ClubFields',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'club_fields',
            },
        ),
        migrations.CreateModel(
            name='Clubs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('date_start', models.DateField(blank=True, null=True)),
                ('date_end', models.DateField(blank=True, null=True)),
                ('date_created', models.DateTimeField()),
                ('date_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'clubs',
            },
        ),
        migrations.CreateModel(
            name='ClubTemplateEnrollmentFields',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('authorised_value_category', models.CharField(blank=True, max_length=16, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'club_template_enrollment_fields',
            },
        ),
        migrations.CreateModel(
            name='ClubTemplateFields',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('authorised_value_category', models.CharField(blank=True, max_length=16, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'club_template_fields',
            },
        ),
        migrations.CreateModel(
            name='ClubTemplates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('is_enrollable_from_opac', models.IntegerField()),
                ('is_email_required', models.IntegerField()),
                ('date_created', models.DateTimeField()),
                ('date_updated', models.DateTimeField(blank=True, null=True)),
                ('is_deletable', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'club_templates',
            },
        ),
        migrations.CreateModel(
            name='Collections',
            fields=[
                ('colid', models.AutoField(db_column='colId', primary_key=True, serialize=False)),
                ('coltitle', models.CharField(db_column='colTitle', max_length=100)),
                ('coldesc', models.TextField(db_column='colDesc')),
            ],
            options={
                'managed': False,
                'db_table': 'collections',
            },
        ),
        migrations.CreateModel(
            name='CollectionsTracking',
            fields=[
                ('collections_tracking_id', models.AutoField(primary_key=True, serialize=False)),
                ('colid', models.IntegerField(db_column='colId')),
                ('itemnumber', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'collections_tracking',
            },
        ),
        migrations.CreateModel(
            name='ColumnsSettings',
            fields=[
                ('module', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('page', models.CharField(max_length=255)),
                ('tablename', models.CharField(max_length=255)),
                ('columnname', models.CharField(max_length=255)),
                ('cannot_be_toggled', models.IntegerField()),
                ('is_hidden', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'columns_settings',
            },
        ),
        migrations.CreateModel(
            name='CourseItems',
            fields=[
                ('ci_id', models.AutoField(primary_key=True, serialize=False)),
                ('itype', models.CharField(blank=True, max_length=10, null=True)),
                ('ccode', models.CharField(blank=True, max_length=80, null=True)),
                ('location', models.CharField(blank=True, max_length=80, null=True)),
                ('enabled', models.CharField(max_length=3)),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'course_items',
            },
        ),
        migrations.CreateModel(
            name='CourseReserves',
            fields=[
                ('cr_id', models.AutoField(primary_key=True, serialize=False)),
                ('staff_note', models.TextField(blank=True, null=True)),
                ('public_note', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'course_reserves',
            },
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('course_id', models.AutoField(primary_key=True, serialize=False)),
                ('department', models.CharField(blank=True, max_length=80, null=True)),
                ('course_number', models.CharField(blank=True, max_length=255, null=True)),
                ('section', models.CharField(blank=True, max_length=255, null=True)),
                ('course_name', models.CharField(blank=True, max_length=255, null=True)),
                ('term', models.CharField(blank=True, max_length=80, null=True)),
                ('staff_note', models.TextField(blank=True, null=True)),
                ('public_note', models.TextField(blank=True, null=True)),
                ('students_count', models.CharField(blank=True, max_length=20, null=True)),
                ('enabled', models.CharField(max_length=3)),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'courses',
            },
        ),
        migrations.CreateModel(
            name='CreatorBatches',
            fields=[
                ('label_id', models.AutoField(primary_key=True, serialize=False)),
                ('batch_id', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField()),
                ('creator', models.CharField(max_length=15)),
            ],
            options={
                'managed': False,
                'db_table': 'creator_batches',
            },
        ),
        migrations.CreateModel(
            name='CreatorImages',
            fields=[
                ('image_id', models.AutoField(primary_key=True, serialize=False)),
                ('imagefile', models.TextField(blank=True, null=True)),
                ('image_name', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'creator_images',
            },
        ),
        migrations.CreateModel(
            name='CreatorLayouts',
            fields=[
                ('layout_id', models.AutoField(primary_key=True, serialize=False)),
                ('barcode_type', models.CharField(max_length=100)),
                ('start_label', models.IntegerField()),
                ('printing_type', models.CharField(max_length=32)),
                ('layout_name', models.CharField(max_length=25)),
                ('guidebox', models.IntegerField(blank=True, null=True)),
                ('oblique_title', models.IntegerField(blank=True, null=True)),
                ('font', models.CharField(max_length=10)),
                ('font_size', models.IntegerField()),
                ('units', models.CharField(max_length=20)),
                ('callnum_split', models.IntegerField(blank=True, null=True)),
                ('text_justify', models.CharField(max_length=1)),
                ('format_string', models.CharField(max_length=210)),
                ('layout_xml', models.TextField()),
                ('creator', models.CharField(max_length=15)),
            ],
            options={
                'managed': False,
                'db_table': 'creator_layouts',
            },
        ),
        migrations.CreateModel(
            name='CreatorTemplates',
            fields=[
                ('template_id', models.AutoField(primary_key=True, serialize=False)),
                ('profile_id', models.IntegerField(blank=True, null=True)),
                ('template_code', models.CharField(max_length=100)),
                ('template_desc', models.CharField(max_length=100)),
                ('page_width', models.FloatField()),
                ('page_height', models.FloatField()),
                ('label_width', models.FloatField()),
                ('label_height', models.FloatField()),
                ('top_text_margin', models.FloatField()),
                ('left_text_margin', models.FloatField()),
                ('top_margin', models.FloatField()),
                ('left_margin', models.FloatField()),
                ('cols', models.IntegerField()),
                ('rows', models.IntegerField()),
                ('col_gap', models.FloatField()),
                ('row_gap', models.FloatField()),
                ('units', models.CharField(max_length=20)),
                ('creator', models.CharField(max_length=15)),
            ],
            options={
                'managed': False,
                'db_table': 'creator_templates',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('currency', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('symbol', models.CharField(blank=True, max_length=5, null=True)),
                ('isocode', models.CharField(blank=True, max_length=5, null=True)),
                ('timestamp', models.DateTimeField()),
                ('rate', models.FloatField(blank=True, null=True)),
                ('active', models.IntegerField(blank=True, null=True)),
                ('archived', models.IntegerField(blank=True, null=True)),
                ('p_sep_by_space', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'currency',
            },
        ),
        migrations.CreateModel(
            name='DefaultCircRules',
            fields=[
                ('singleton', models.CharField(max_length=9, primary_key=True, serialize=False)),
                ('maxissueqty', models.IntegerField(blank=True, null=True)),
                ('maxonsiteissueqty', models.IntegerField(blank=True, null=True)),
                ('holdallowed', models.IntegerField(blank=True, null=True)),
                ('hold_fulfillment_policy', models.CharField(max_length=13)),
                ('returnbranch', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'default_circ_rules',
            },
        ),
        migrations.CreateModel(
            name='Deletedbiblio',
            fields=[
                ('biblionumber', models.AutoField(primary_key=True, serialize=False)),
                ('frameworkcode', models.CharField(max_length=4)),
                ('author', models.TextField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('unititle', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('serial', models.IntegerField(blank=True, null=True)),
                ('seriestitle', models.TextField(blank=True, null=True)),
                ('copyrightdate', models.SmallIntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField()),
                ('datecreated', models.DateField()),
                ('abstract', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'deletedbiblio',
            },
        ),
        migrations.CreateModel(
            name='Deletedbiblioitems',
            fields=[
                ('biblioitemnumber', models.IntegerField(primary_key=True, serialize=False)),
                ('biblionumber', models.IntegerField()),
                ('volume', models.TextField(blank=True, null=True)),
                ('number', models.TextField(blank=True, null=True)),
                ('itemtype', models.CharField(blank=True, max_length=10, null=True)),
                ('isbn', models.TextField(blank=True, null=True)),
                ('issn', models.TextField(blank=True, null=True)),
                ('ean', models.TextField(blank=True, null=True)),
                ('publicationyear', models.TextField(blank=True, null=True)),
                ('publishercode', models.CharField(blank=True, max_length=255, null=True)),
                ('volumedate', models.DateField(blank=True, null=True)),
                ('volumedesc', models.TextField(blank=True, null=True)),
                ('collectiontitle', models.TextField(blank=True, null=True)),
                ('collectionissn', models.TextField(blank=True, null=True)),
                ('collectionvolume', models.TextField(blank=True, null=True)),
                ('editionstatement', models.TextField(blank=True, null=True)),
                ('editionresponsibility', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField()),
                ('illus', models.CharField(blank=True, max_length=255, null=True)),
                ('pages', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('size', models.CharField(blank=True, max_length=255, null=True)),
                ('place', models.CharField(blank=True, max_length=255, null=True)),
                ('lccn', models.CharField(blank=True, max_length=25, null=True)),
                ('url', models.TextField(blank=True, null=True)),
                ('cn_source', models.CharField(blank=True, max_length=10, null=True)),
                ('cn_class', models.CharField(blank=True, max_length=30, null=True)),
                ('cn_item', models.CharField(blank=True, max_length=10, null=True)),
                ('cn_suffix', models.CharField(blank=True, max_length=10, null=True)),
                ('cn_sort', models.CharField(blank=True, max_length=255, null=True)),
                ('agerestriction', models.CharField(blank=True, max_length=255, null=True)),
                ('totalissues', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'deletedbiblioitems',
            },
        ),
        migrations.CreateModel(
            name='DeletedbiblioMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('format', models.CharField(max_length=16)),
                ('marcflavour', models.CharField(max_length=16)),
                ('metadata', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'deletedbiblio_metadata',
            },
        ),
        migrations.CreateModel(
            name='Deletedborrowers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('borrowernumber', models.IntegerField()),
                ('cardnumber', models.CharField(blank=True, max_length=32, null=True)),
                ('surname', models.TextField(blank=True, null=True)),
                ('firstname', models.TextField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('othernames', models.TextField(blank=True, null=True)),
                ('initials', models.TextField(blank=True, null=True)),
                ('streetnumber', models.CharField(blank=True, max_length=10, null=True)),
                ('streettype', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('address2', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=25, null=True)),
                ('country', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('phone', models.TextField(blank=True, null=True)),
                ('mobile', models.CharField(blank=True, max_length=50, null=True)),
                ('fax', models.TextField(blank=True, null=True)),
                ('emailpro', models.TextField(blank=True, null=True)),
                ('phonepro', models.TextField(blank=True, null=True)),
                ('b_streetnumber', models.CharField(blank=True, db_column='B_streetnumber', max_length=10, null=True)),
                ('b_streettype', models.CharField(blank=True, db_column='B_streettype', max_length=50, null=True)),
                ('b_address', models.CharField(blank=True, db_column='B_address', max_length=100, null=True)),
                ('b_address2', models.TextField(blank=True, db_column='B_address2', null=True)),
                ('b_city', models.TextField(blank=True, db_column='B_city', null=True)),
                ('b_state', models.TextField(blank=True, db_column='B_state', null=True)),
                ('b_zipcode', models.CharField(blank=True, db_column='B_zipcode', max_length=25, null=True)),
                ('b_country', models.TextField(blank=True, db_column='B_country', null=True)),
                ('b_email', models.TextField(blank=True, db_column='B_email', null=True)),
                ('b_phone', models.TextField(blank=True, db_column='B_phone', null=True)),
                ('dateofbirth', models.DateField(blank=True, null=True)),
                ('branchcode', models.CharField(max_length=10)),
                ('categorycode', models.CharField(max_length=10)),
                ('dateenrolled', models.DateField(blank=True, null=True)),
                ('dateexpiry', models.DateField(blank=True, null=True)),
                ('date_renewed', models.DateField(blank=True, null=True)),
                ('gonenoaddress', models.IntegerField(blank=True, null=True)),
                ('lost', models.IntegerField(blank=True, null=True)),
                ('debarred', models.DateField(blank=True, null=True)),
                ('debarredcomment', models.CharField(blank=True, max_length=255, null=True)),
                ('contactname', models.TextField(blank=True, null=True)),
                ('contactfirstname', models.TextField(blank=True, null=True)),
                ('contacttitle', models.TextField(blank=True, null=True)),
                ('guarantorid', models.IntegerField(blank=True, null=True)),
                ('borrowernotes', models.TextField(blank=True, null=True)),
                ('relationship', models.CharField(blank=True, max_length=100, null=True)),
                ('sex', models.CharField(blank=True, max_length=1, null=True)),
                ('password', models.CharField(blank=True, max_length=60, null=True)),
                ('flags', models.IntegerField(blank=True, null=True)),
                ('userid', models.CharField(blank=True, max_length=75, null=True)),
                ('opacnote', models.TextField(blank=True, null=True)),
                ('contactnote', models.CharField(blank=True, max_length=255, null=True)),
                ('sort1', models.CharField(blank=True, max_length=80, null=True)),
                ('sort2', models.CharField(blank=True, max_length=80, null=True)),
                ('altcontactfirstname', models.CharField(blank=True, max_length=255, null=True)),
                ('altcontactsurname', models.CharField(blank=True, max_length=255, null=True)),
                ('altcontactaddress1', models.CharField(blank=True, max_length=255, null=True)),
                ('altcontactaddress2', models.CharField(blank=True, max_length=255, null=True)),
                ('altcontactaddress3', models.CharField(blank=True, max_length=255, null=True)),
                ('altcontactstate', models.TextField(blank=True, null=True)),
                ('altcontactzipcode', models.CharField(blank=True, max_length=50, null=True)),
                ('altcontactcountry', models.TextField(blank=True, null=True)),
                ('altcontactphone', models.CharField(blank=True, max_length=50, null=True)),
                ('smsalertnumber', models.CharField(blank=True, max_length=50, null=True)),
                ('sms_provider_id', models.IntegerField(blank=True, null=True)),
                ('privacy', models.IntegerField()),
                ('privacy_guarantor_checkouts', models.IntegerField()),
                ('checkprevcheckout', models.CharField(max_length=7)),
                ('updated_on', models.DateTimeField()),
                ('lastseen', models.DateTimeField(blank=True, null=True)),
                ('lang', models.CharField(max_length=25)),
                ('login_attempts', models.IntegerField(blank=True, null=True)),
                ('overdrive_auth_token', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'deletedborrowers',
            },
        ),
        migrations.CreateModel(
            name='Deleteditems',
            fields=[
                ('itemnumber', models.IntegerField(primary_key=True, serialize=False)),
                ('biblionumber', models.IntegerField()),
                ('biblioitemnumber', models.IntegerField()),
                ('barcode', models.CharField(blank=True, max_length=20, null=True)),
                ('dateaccessioned', models.DateField(blank=True, null=True)),
                ('booksellerid', models.TextField(blank=True, null=True)),
                ('homebranch', models.CharField(blank=True, max_length=10, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('replacementprice', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('replacementpricedate', models.DateField(blank=True, null=True)),
                ('datelastborrowed', models.DateField(blank=True, null=True)),
                ('datelastseen', models.DateField(blank=True, null=True)),
                ('stack', models.IntegerField(blank=True, null=True)),
                ('notforloan', models.IntegerField()),
                ('damaged', models.IntegerField()),
                ('damaged_on', models.DateTimeField(blank=True, null=True)),
                ('itemlost', models.IntegerField()),
                ('itemlost_on', models.DateTimeField(blank=True, null=True)),
                ('withdrawn', models.IntegerField()),
                ('withdrawn_on', models.DateTimeField(blank=True, null=True)),
                ('itemcallnumber', models.CharField(blank=True, max_length=255, null=True)),
                ('coded_location_qualifier', models.CharField(blank=True, max_length=10, null=True)),
                ('issues', models.SmallIntegerField(blank=True, null=True)),
                ('renewals', models.SmallIntegerField(blank=True, null=True)),
                ('reserves', models.SmallIntegerField(blank=True, null=True)),
                ('restricted', models.IntegerField(blank=True, null=True)),
                ('itemnotes', models.TextField(blank=True, null=True)),
                ('itemnotes_nonpublic', models.TextField(blank=True, null=True)),
                ('holdingbranch', models.CharField(blank=True, max_length=10, null=True)),
                ('paidfor', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField()),
                ('location', models.CharField(blank=True, max_length=80, null=True)),
                ('permanent_location', models.CharField(blank=True, max_length=80, null=True)),
                ('onloan', models.DateField(blank=True, null=True)),
                ('cn_source', models.CharField(blank=True, max_length=10, null=True)),
                ('cn_sort', models.CharField(blank=True, max_length=255, null=True)),
                ('ccode', models.CharField(blank=True, max_length=80, null=True)),
                ('materials', models.TextField(blank=True, null=True)),
                ('uri', models.CharField(blank=True, max_length=255, null=True)),
                ('itype', models.CharField(blank=True, max_length=10, null=True)),
                ('more_subfields_xml', models.TextField(blank=True, null=True)),
                ('enumchron', models.TextField(blank=True, null=True)),
                ('copynumber', models.CharField(blank=True, max_length=32, null=True)),
                ('stocknumber', models.CharField(blank=True, max_length=32, null=True)),
                ('new_status', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'deleteditems',
            },
        ),
        migrations.CreateModel(
            name='Discharges',
            fields=[
                ('discharge_id', models.AutoField(primary_key=True, serialize=False)),
                ('needed', models.DateTimeField(blank=True, null=True)),
                ('validated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'discharges',
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'django_admin_log',
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'django_content_type',
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'django_migrations',
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'django_session',
            },
        ),
        migrations.CreateModel(
            name='EdifactEan',
            fields=[
                ('ee_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=128, null=True)),
                ('ean', models.CharField(max_length=15)),
                ('id_code_qualifier', models.CharField(max_length=3)),
            ],
            options={
                'managed': False,
                'db_table': 'edifact_ean',
            },
        ),
        migrations.CreateModel(
            name='EdifactMessages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(max_length=10)),
                ('transfer_date', models.DateField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('raw_msg', models.TextField(blank=True, null=True)),
                ('filename', models.TextField(blank=True, null=True)),
                ('deleted', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'edifact_messages',
            },
        ),
        migrations.CreateModel(
            name='ExportFormat',
            fields=[
                ('export_format_id', models.AutoField(primary_key=True, serialize=False)),
                ('profile', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('content', models.TextField()),
                ('csv_separator', models.CharField(max_length=2)),
                ('field_separator', models.CharField(blank=True, max_length=2, null=True)),
                ('subfield_separator', models.CharField(blank=True, max_length=2, null=True)),
                ('encoding', models.CharField(max_length=255)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('used_for', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'export_format',
            },
        ),
        migrations.CreateModel(
            name='Fieldmapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(max_length=255)),
                ('frameworkcode', models.CharField(max_length=4)),
                ('fieldcode', models.CharField(max_length=3)),
                ('subfieldcode', models.CharField(max_length=1)),
            ],
            options={
                'managed': False,
                'db_table': 'fieldmapping',
            },
        ),
        migrations.CreateModel(
            name='HouseboundVisit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateField(blank=True, null=True)),
                ('day_segment', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'housebound_visit',
            },
        ),
        migrations.CreateModel(
            name='Illcomments',
            fields=[
                ('illcomment_id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'illcomments',
            },
        ),
        migrations.CreateModel(
            name='Illrequests',
            fields=[
                ('illrequest_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('biblio_id', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('placed', models.DateField(blank=True, null=True)),
                ('replied', models.DateField(blank=True, null=True)),
                ('updated', models.DateTimeField()),
                ('completed', models.DateField(blank=True, null=True)),
                ('medium', models.CharField(blank=True, max_length=30, null=True)),
                ('accessurl', models.CharField(blank=True, max_length=500, null=True)),
                ('cost', models.CharField(blank=True, max_length=20, null=True)),
                ('price_paid', models.CharField(blank=True, max_length=20, null=True)),
                ('notesopac', models.TextField(blank=True, null=True)),
                ('notesstaff', models.TextField(blank=True, null=True)),
                ('orderid', models.CharField(blank=True, max_length=50, null=True)),
                ('backend', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'illrequests',
            },
        ),
        migrations.CreateModel(
            name='ImportAuths',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matched_authid', models.IntegerField(blank=True, null=True)),
                ('control_number', models.CharField(blank=True, max_length=25, null=True)),
                ('authorized_heading', models.CharField(blank=True, max_length=128, null=True)),
                ('original_source', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'import_auths',
            },
        ),
        migrations.CreateModel(
            name='ImportBatches',
            fields=[
                ('import_batch_id', models.AutoField(primary_key=True, serialize=False)),
                ('matcher_id', models.IntegerField(blank=True, null=True)),
                ('template_id', models.IntegerField(blank=True, null=True)),
                ('branchcode', models.CharField(blank=True, max_length=10, null=True)),
                ('num_records', models.IntegerField()),
                ('num_items', models.IntegerField()),
                ('upload_timestamp', models.DateTimeField()),
                ('overlay_action', models.CharField(max_length=12)),
                ('nomatch_action', models.CharField(max_length=10)),
                ('item_action', models.CharField(max_length=20)),
                ('import_status', models.CharField(max_length=9)),
                ('batch_type', models.CharField(max_length=10)),
                ('record_type', models.CharField(max_length=8)),
                ('file_name', models.CharField(blank=True, max_length=100, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'import_batches',
            },
        ),
        migrations.CreateModel(
            name='ImportBiblios',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matched_biblionumber', models.IntegerField(blank=True, null=True)),
                ('control_number', models.CharField(blank=True, max_length=25, null=True)),
                ('original_source', models.CharField(blank=True, max_length=25, null=True)),
                ('title', models.CharField(blank=True, max_length=128, null=True)),
                ('author', models.CharField(blank=True, max_length=80, null=True)),
                ('isbn', models.CharField(blank=True, max_length=30, null=True)),
                ('issn', models.CharField(blank=True, max_length=9, null=True)),
                ('has_items', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'import_biblios',
            },
        ),
        migrations.CreateModel(
            name='ImportItems',
            fields=[
                ('import_items_id', models.AutoField(primary_key=True, serialize=False)),
                ('itemnumber', models.IntegerField(blank=True, null=True)),
                ('branchcode', models.CharField(blank=True, max_length=10, null=True)),
                ('status', models.CharField(max_length=8)),
                ('marcxml', models.TextField()),
                ('import_error', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'import_items',
            },
        ),
        migrations.CreateModel(
            name='ImportRecordMatches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidate_match_id', models.IntegerField()),
                ('score', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'import_record_matches',
            },
        ),
        migrations.CreateModel(
            name='ImportRecords',
            fields=[
                ('import_record_id', models.AutoField(primary_key=True, serialize=False)),
                ('branchcode', models.CharField(blank=True, max_length=10, null=True)),
                ('record_sequence', models.IntegerField()),
                ('upload_timestamp', models.DateTimeField()),
                ('import_date', models.DateField(blank=True, null=True)),
                ('marc', models.TextField()),
                ('marcxml', models.TextField()),
                ('marcxml_old', models.TextField()),
                ('record_type', models.CharField(max_length=8)),
                ('overlay_status', models.CharField(max_length=13)),
                ('status', models.CharField(max_length=14)),
                ('import_error', models.TextField(blank=True, null=True)),
                ('encoding', models.CharField(max_length=40)),
                ('z3950random', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'import_records',
            },
        ),
        migrations.CreateModel(
            name='Issues',
            fields=[
                ('issue_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_due', models.DateTimeField(blank=True, null=True)),
                ('branchcode', models.CharField(blank=True, max_length=10, null=True)),
                ('returndate', models.DateTimeField(blank=True, null=True)),
                ('lastreneweddate', models.DateTimeField(blank=True, null=True)),
                ('renewals', models.IntegerField(blank=True, null=True)),
                ('auto_renew', models.IntegerField(blank=True, null=True)),
                ('auto_renew_error', models.CharField(blank=True, max_length=32, null=True)),
                ('timestamp', models.DateTimeField()),
                ('issuedate', models.DateTimeField(blank=True, null=True)),
                ('onsite_checkout', models.IntegerField()),
                ('note', models.TextField(blank=True, null=True)),
                ('notedate', models.DateTimeField(blank=True, null=True)),
                ('noteseen', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'issues',
            },
        ),
        migrations.CreateModel(
            name='Issuingrules',
            fields=[
                ('categorycode', models.CharField(max_length=10)),
                ('itemtype', models.CharField(max_length=10)),
                ('restrictedtype', models.IntegerField(blank=True, null=True)),
                ('rentaldiscount', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('reservecharge', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('fine', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('finedays', models.IntegerField(blank=True, null=True)),
                ('maxsuspensiondays', models.IntegerField(blank=True, null=True)),
                ('suspension_chargeperiod', models.IntegerField(blank=True, null=True)),
                ('firstremind', models.IntegerField(blank=True, null=True)),
                ('chargeperiod', models.IntegerField(blank=True, null=True)),
                ('chargeperiod_charge_at', models.IntegerField()),
                ('accountsent', models.IntegerField(blank=True, null=True)),
                ('chargename', models.CharField(blank=True, max_length=100, null=True)),
                ('maxissueqty', models.IntegerField(blank=True, null=True)),
                ('maxonsiteissueqty', models.IntegerField(blank=True, null=True)),
                ('issuelength', models.IntegerField(blank=True, null=True)),
                ('lengthunit', models.CharField(blank=True, max_length=10, null=True)),
                ('hardduedate', models.DateField(blank=True, null=True)),
                ('hardduedatecompare', models.IntegerField()),
                ('renewalsallowed', models.SmallIntegerField()),
                ('renewalperiod', models.IntegerField(blank=True, null=True)),
                ('norenewalbefore', models.IntegerField(blank=True, null=True)),
                ('auto_renew', models.IntegerField(blank=True, null=True)),
                ('no_auto_renewal_after', models.IntegerField(blank=True, null=True)),
                ('no_auto_renewal_after_hard_limit', models.DateField(blank=True, null=True)),
                ('reservesallowed', models.SmallIntegerField()),
                ('holds_per_record', models.SmallIntegerField()),
                ('holds_per_day', models.SmallIntegerField(blank=True, null=True)),
                ('branchcode', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('overduefinescap', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('cap_fine_to_replacement_price', models.IntegerField()),
                ('onshelfholds', models.IntegerField()),
                ('opacitemholds', models.CharField(max_length=1)),
                ('article_requests', models.CharField(max_length=9)),
                ('note', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'issuingrules',
            },
        ),
        migrations.CreateModel(
            name='ItemCirculationAlertPreferences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branchcode', models.CharField(max_length=10)),
                ('categorycode', models.CharField(max_length=10)),
                ('item_type', models.CharField(max_length=10)),
                ('notification', models.CharField(max_length=16)),
            ],
            options={
                'managed': False,
                'db_table': 'item_circulation_alert_preferences',
            },
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('itemnumber', models.AutoField(primary_key=True, serialize=False)),
                ('barcode', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('dateaccessioned', models.DateField(blank=True, null=True)),
                ('booksellerid', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('replacementprice', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('replacementpricedate', models.DateField(blank=True, null=True)),
                ('datelastborrowed', models.DateField(blank=True, null=True)),
                ('datelastseen', models.DateField(blank=True, null=True)),
                ('stack', models.IntegerField(blank=True, null=True)),
                ('notforloan', models.IntegerField()),
                ('damaged', models.IntegerField()),
                ('damaged_on', models.DateTimeField(blank=True, null=True)),
                ('itemlost', models.IntegerField()),
                ('itemlost_on', models.DateTimeField(blank=True, null=True)),
                ('withdrawn', models.IntegerField()),
                ('withdrawn_on', models.DateTimeField(blank=True, null=True)),
                ('itemcallnumber', models.CharField(blank=True, max_length=255, null=True)),
                ('coded_location_qualifier', models.CharField(blank=True, max_length=10, null=True)),
                ('issues', models.SmallIntegerField(blank=True, null=True)),
                ('renewals', models.SmallIntegerField(blank=True, null=True)),
                ('reserves', models.SmallIntegerField(blank=True, null=True)),
                ('restricted', models.IntegerField(blank=True, null=True)),
                ('itemnotes', models.TextField(blank=True, null=True)),
                ('itemnotes_nonpublic', models.TextField(blank=True, null=True)),
                ('paidfor', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField()),
                ('location', models.CharField(blank=True, max_length=80, null=True)),
                ('permanent_location', models.CharField(blank=True, max_length=80, null=True)),
                ('onloan', models.DateField(blank=True, null=True)),
                ('cn_source', models.CharField(blank=True, max_length=10, null=True)),
                ('cn_sort', models.CharField(blank=True, max_length=255, null=True)),
                ('ccode', models.CharField(blank=True, max_length=80, null=True)),
                ('materials', models.TextField(blank=True, null=True)),
                ('uri', models.CharField(blank=True, max_length=255, null=True)),
                ('itype', models.CharField(blank=True, max_length=10, null=True)),
                ('more_subfields_xml', models.TextField(blank=True, null=True)),
                ('enumchron', models.TextField(blank=True, null=True)),
                ('copynumber', models.CharField(blank=True, max_length=32, null=True)),
                ('stocknumber', models.CharField(blank=True, max_length=32, null=True)),
                ('new_status', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'items',
            },
        ),
        migrations.CreateModel(
            name='ItemsLastBorrower',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'items_last_borrower',
            },
        ),
        migrations.CreateModel(
            name='ItemsSearchFields',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=255)),
                ('tagfield', models.CharField(max_length=3)),
                ('tagsubfield', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'items_search_fields',
            },
        ),
        migrations.CreateModel(
            name='Itemtypes',
            fields=[
                ('itemtype', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('rentalcharge', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('defaultreplacecost', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('processfee', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('notforloan', models.SmallIntegerField(blank=True, null=True)),
                ('imageurl', models.CharField(blank=True, max_length=200, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('checkinmsg', models.CharField(blank=True, max_length=255, null=True)),
                ('checkinmsgtype', models.CharField(max_length=16)),
                ('sip_media_type', models.CharField(blank=True, max_length=3, null=True)),
                ('hideinopac', models.IntegerField()),
                ('searchcategory', models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'itemtypes',
            },
        ),
        migrations.CreateModel(
            name='LanguageDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subtag', models.CharField(blank=True, max_length=25, null=True)),
                ('type', models.CharField(blank=True, max_length=25, null=True)),
                ('lang', models.CharField(blank=True, max_length=25, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'language_descriptions',
            },
        ),
        migrations.CreateModel(
            name='LanguageRfc4646ToIso639',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rfc4646_subtag', models.CharField(blank=True, max_length=25, null=True)),
                ('iso639_2_code', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'language_rfc4646_to_iso639',
            },
        ),
        migrations.CreateModel(
            name='LanguageScriptBidi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rfc4646_subtag', models.CharField(blank=True, max_length=25, null=True)),
                ('bidi', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'language_script_bidi',
            },
        ),
        migrations.CreateModel(
            name='LanguageScriptMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_subtag', models.CharField(blank=True, max_length=25, null=True)),
                ('script_subtag', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'language_script_mapping',
            },
        ),
        migrations.CreateModel(
            name='LanguageSubtagRegistry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subtag', models.CharField(blank=True, max_length=25, null=True)),
                ('type', models.CharField(blank=True, max_length=25, null=True)),
                ('description', models.CharField(blank=True, max_length=25, null=True)),
                ('added', models.DateField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'language_subtag_registry',
            },
        ),
        migrations.CreateModel(
            name='Letter',
            fields=[
                ('module', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20)),
                ('branchcode', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('is_html', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField(blank=True, null=True)),
                ('lang', models.CharField(max_length=25)),
            ],
            options={
                'managed': False,
                'db_table': 'letter',
            },
        ),
        migrations.CreateModel(
            name='LibraryGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('ft_hide_patron_info', models.IntegerField()),
                ('ft_search_groups_opac', models.IntegerField()),
                ('ft_search_groups_staff', models.IntegerField()),
                ('created_on', models.DateTimeField(blank=True, null=True)),
                ('updated_on', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'library_groups',
            },
        ),
        migrations.CreateModel(
            name='Linktracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('biblionumber', models.IntegerField(blank=True, null=True)),
                ('itemnumber', models.IntegerField(blank=True, null=True)),
                ('borrowernumber', models.IntegerField(blank=True, null=True)),
                ('url', models.TextField(blank=True, null=True)),
                ('timeclicked', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'linktracker',
            },
        ),
        migrations.CreateModel(
            name='Localization',
            fields=[
                ('localization_id', models.AutoField(primary_key=True, serialize=False)),
                ('entity', models.CharField(max_length=16)),
                ('code', models.CharField(max_length=64)),
                ('lang', models.CharField(max_length=25)),
                ('translation', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'localization',
            },
        ),
        migrations.CreateModel(
            name='MarcMatchers',
            fields=[
                ('matcher_id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('description', models.CharField(max_length=255)),
                ('record_type', models.CharField(max_length=10)),
                ('threshold', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'marc_matchers',
            },
        ),
        migrations.CreateModel(
            name='MarcModificationTemplateActions',
            fields=[
                ('mmta_id', models.AutoField(primary_key=True, serialize=False)),
                ('ordering', models.IntegerField()),
                ('action', models.CharField(max_length=22)),
                ('field_number', models.SmallIntegerField()),
                ('from_field', models.CharField(max_length=3)),
                ('from_subfield', models.CharField(blank=True, max_length=1, null=True)),
                ('field_value', models.CharField(blank=True, max_length=100, null=True)),
                ('to_field', models.CharField(blank=True, max_length=3, null=True)),
                ('to_subfield', models.CharField(blank=True, max_length=1, null=True)),
                ('to_regex_search', models.TextField(blank=True, null=True)),
                ('to_regex_replace', models.TextField(blank=True, null=True)),
                ('to_regex_modifiers', models.CharField(blank=True, max_length=8, null=True)),
                ('conditional', models.CharField(blank=True, max_length=6, null=True)),
                ('conditional_field', models.CharField(blank=True, max_length=3, null=True)),
                ('conditional_subfield', models.CharField(blank=True, max_length=1, null=True)),
                ('conditional_comparison', models.CharField(blank=True, max_length=10, null=True)),
                ('conditional_value', models.TextField(blank=True, null=True)),
                ('conditional_regex', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'marc_modification_template_actions',
            },
        ),
        migrations.CreateModel(
            name='MarcModificationTemplates',
            fields=[
                ('template_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'marc_modification_templates',
            },
        ),
        migrations.CreateModel(
            name='MarcSubfieldStructure',
            fields=[
                ('tagfield', models.CharField(max_length=3)),
                ('tagsubfield', models.CharField(max_length=1)),
                ('liblibrarian', models.CharField(max_length=255)),
                ('libopac', models.CharField(max_length=255)),
                ('repeatable', models.IntegerField()),
                ('mandatory', models.IntegerField()),
                ('kohafield', models.CharField(blank=True, max_length=40, null=True)),
                ('tab', models.IntegerField(blank=True, null=True)),
                ('authtypecode', models.CharField(blank=True, max_length=20, null=True)),
                ('value_builder', models.CharField(blank=True, max_length=80, null=True)),
                ('isurl', models.IntegerField(blank=True, null=True)),
                ('hidden', models.IntegerField(blank=True, null=True)),
                ('frameworkcode', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('seealso', models.CharField(blank=True, max_length=1100, null=True)),
                ('link', models.CharField(blank=True, max_length=80, null=True)),
                ('defaultvalue', models.TextField(blank=True, null=True)),
                ('maxlength', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'marc_subfield_structure',
            },
        ),
        migrations.CreateModel(
            name='MarcTagStructure',
            fields=[
                ('tagfield', models.CharField(max_length=3)),
                ('liblibrarian', models.CharField(max_length=255)),
                ('libopac', models.CharField(max_length=255)),
                ('repeatable', models.IntegerField()),
                ('mandatory', models.IntegerField()),
                ('authorised_value', models.CharField(blank=True, max_length=10, null=True)),
                ('ind1_defaultvalue', models.CharField(max_length=1)),
                ('ind2_defaultvalue', models.CharField(max_length=1)),
                ('frameworkcode', models.CharField(max_length=4, primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'marc_tag_structure',
            },
        ),
        migrations.CreateModel(
            name='Matchchecks',
            fields=[
                ('matchcheck_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'matchchecks',
            },
        ),
        migrations.CreateModel(
            name='MatcherMatchpoints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'matcher_matchpoints',
            },
        ),
        migrations.CreateModel(
            name='MatchpointComponentNorms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField()),
                ('norm_routine', models.CharField(max_length=50)),
            ],
            options={
                'managed': False,
                'db_table': 'matchpoint_component_norms',
            },
        ),
        migrations.CreateModel(
            name='MatchpointComponents',
            fields=[
                ('matchpoint_component_id', models.AutoField(primary_key=True, serialize=False)),
                ('sequence', models.IntegerField()),
                ('tag', models.CharField(max_length=3)),
                ('subfields', models.CharField(max_length=40)),
                ('offset', models.IntegerField()),
                ('length', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'matchpoint_components',
            },
        ),
        migrations.CreateModel(
            name='Matchpoints',
            fields=[
                ('matchpoint_id', models.AutoField(primary_key=True, serialize=False)),
                ('search_index', models.CharField(max_length=30)),
                ('score', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'matchpoints',
            },
        ),
        migrations.CreateModel(
            name='MessageAttributes',
            fields=[
                ('message_attribute_id', models.AutoField(primary_key=True, serialize=False)),
                ('message_name', models.CharField(max_length=40, unique=True)),
                ('takes_days', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'message_attributes',
            },
        ),
        migrations.CreateModel(
            name='MessageQueue',
            fields=[
                ('message_id', models.AutoField(primary_key=True, serialize=False)),
                ('subject', models.TextField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('metadata', models.TextField(blank=True, null=True)),
                ('letter_code', models.CharField(blank=True, max_length=64, null=True)),
                ('status', models.CharField(max_length=7)),
                ('time_queued', models.DateTimeField()),
                ('to_address', models.TextField(blank=True, null=True)),
                ('from_address', models.TextField(blank=True, null=True)),
                ('content_type', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'message_queue',
            },
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('message_id', models.AutoField(primary_key=True, serialize=False)),
                ('borrowernumber', models.IntegerField()),
                ('branchcode', models.CharField(blank=True, max_length=10, null=True)),
                ('message_type', models.CharField(max_length=1)),
                ('message', models.TextField()),
                ('message_date', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'messages',
            },
        ),
        migrations.CreateModel(
            name='MessageTransportTypes',
            fields=[
                ('message_transport_type', models.CharField(max_length=20, primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'message_transport_types',
            },
        ),
        migrations.CreateModel(
            name='MiscFiles',
            fields=[
                ('file_id', models.AutoField(primary_key=True, serialize=False)),
                ('table_tag', models.CharField(max_length=255)),
                ('record_id', models.IntegerField()),
                ('file_name', models.CharField(max_length=255)),
                ('file_type', models.CharField(max_length=255)),
                ('file_description', models.CharField(blank=True, max_length=255, null=True)),
                ('file_content', models.TextField()),
                ('date_uploaded', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'misc_files',
            },
        ),
        migrations.CreateModel(
            name='NeedMergeAuthorities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authid', models.BigIntegerField()),
                ('authid_new', models.BigIntegerField(blank=True, null=True)),
                ('reportxml', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField()),
                ('done', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'need_merge_authorities',
            },
        ),
        migrations.CreateModel(
            name='OaiSets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spec', models.CharField(max_length=80, unique=True)),
                ('name', models.CharField(max_length=80)),
            ],
            options={
                'managed': False,
                'db_table': 'oai_sets',
            },
        ),
        migrations.CreateModel(
            name='OaiSetsBiblios',
            fields=[
                ('biblionumber', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'oai_sets_biblios',
            },
        ),
        migrations.CreateModel(
            name='OaiSetsDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'oai_sets_descriptions',
            },
        ),
        migrations.CreateModel(
            name='OaiSetsMappings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marcfield', models.CharField(max_length=3)),
                ('marcsubfield', models.CharField(max_length=1)),
                ('operator', models.CharField(max_length=8)),
                ('marcvalue', models.CharField(max_length=80)),
            ],
            options={
                'managed': False,
                'db_table': 'oai_sets_mappings',
            },
        ),
        migrations.CreateModel(
            name='OauthAccessTokens',
            fields=[
                ('access_token', models.CharField(max_length=191, primary_key=True, serialize=False)),
                ('client_id', models.CharField(max_length=191)),
                ('expires', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'oauth_access_tokens',
            },
        ),
        migrations.CreateModel(
            name='OldIssues',
            fields=[
                ('issue_id', models.IntegerField(primary_key=True, serialize=False)),
                ('date_due', models.DateTimeField(blank=True, null=True)),
                ('branchcode', models.CharField(blank=True, max_length=10, null=True)),
                ('returndate', models.DateTimeField(blank=True, null=True)),
                ('lastreneweddate', models.DateTimeField(blank=True, null=True)),
                ('renewals', models.IntegerField(blank=True, null=True)),
                ('auto_renew', models.IntegerField(blank=True, null=True)),
                ('auto_renew_error', models.CharField(blank=True, max_length=32, null=True)),
                ('timestamp', models.DateTimeField()),
                ('issuedate', models.DateTimeField(blank=True, null=True)),
                ('onsite_checkout', models.IntegerField()),
                ('note', models.TextField(blank=True, null=True)),
                ('notedate', models.DateTimeField(blank=True, null=True)),
                ('noteseen', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'old_issues',
            },
        ),
        migrations.CreateModel(
            name='OldReserves',
            fields=[
                ('reserve_id', models.IntegerField(primary_key=True, serialize=False)),
                ('reservedate', models.DateField(blank=True, null=True)),
                ('branchcode', models.CharField(blank=True, max_length=10, null=True)),
                ('notificationdate', models.DateField(blank=True, null=True)),
                ('reminderdate', models.DateField(blank=True, null=True)),
                ('cancellationdate', models.DateField(blank=True, null=True)),
                ('reservenotes', models.TextField(blank=True, null=True)),
                ('priority', models.SmallIntegerField(blank=True, null=True)),
                ('found', models.CharField(blank=True, max_length=1, null=True)),
                ('timestamp', models.DateTimeField()),
                ('waitingdate', models.DateField(blank=True, null=True)),
                ('expirationdate', models.DateField(blank=True, null=True)),
                ('lowestpriority', models.IntegerField(db_column='lowestPriority')),
                ('suspend', models.IntegerField()),
                ('suspend_until', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'old_reserves',
            },
        ),
        migrations.CreateModel(
            name='OpacNews',
            fields=[
                ('idnew', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=250)),
                ('content', models.TextField()),
                ('lang', models.CharField(max_length=25)),
                ('timestamp', models.DateTimeField()),
                ('expirationdate', models.DateField(blank=True, null=True)),
                ('number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'opac_news',
            },
        ),
        migrations.CreateModel(
            name='Overduerules',
            fields=[
                ('overduerules_id', models.AutoField(primary_key=True, serialize=False)),
                ('branchcode', models.CharField(max_length=10)),
                ('categorycode', models.CharField(max_length=10)),
                ('delay1', models.IntegerField(blank=True, null=True)),
                ('letter1', models.CharField(blank=True, max_length=20, null=True)),
                ('debarred1', models.CharField(blank=True, max_length=1, null=True)),
                ('delay2', models.IntegerField(blank=True, null=True)),
                ('debarred2', models.CharField(blank=True, max_length=1, null=True)),
                ('letter2', models.CharField(blank=True, max_length=20, null=True)),
                ('delay3', models.IntegerField(blank=True, null=True)),
                ('letter3', models.CharField(blank=True, max_length=20, null=True)),
                ('debarred3', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'overduerules',
            },
        ),
        migrations.CreateModel(
            name='OverduerulesTransportTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letternumber', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'overduerules_transport_types',
            },
        ),
        migrations.CreateModel(
            name='PatronConsent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=15, null=True)),
                ('given_on', models.DateTimeField(blank=True, null=True)),
                ('refused_on', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'patron_consent',
            },
        ),
        migrations.CreateModel(
            name='PatronListPatrons',
            fields=[
                ('patron_list_patron_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'patron_list_patrons',
            },
        ),
        migrations.CreateModel(
            name='PatronLists',
            fields=[
                ('patron_list_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('shared', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'patron_lists',
            },
        ),
        migrations.CreateModel(
            name='PendingOfflineOperations',
            fields=[
                ('operationid', models.AutoField(primary_key=True, serialize=False)),
                ('userid', models.CharField(max_length=30)),
                ('branchcode', models.CharField(max_length=10)),
                ('timestamp', models.DateTimeField()),
                ('action', models.CharField(max_length=10)),
                ('barcode', models.CharField(blank=True, max_length=20, null=True)),
                ('cardnumber', models.CharField(blank=True, max_length=32, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'pending_offline_operations',
            },
        ),
        migrations.CreateModel(
            name='PluginData',
            fields=[
                ('plugin_class', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('plugin_key', models.CharField(max_length=255)),
                ('plugin_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'plugin_data',
            },
        ),
        migrations.CreateModel(
            name='Printers',
            fields=[
                ('printername', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('printqueue', models.CharField(blank=True, max_length=20, null=True)),
                ('printtype', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'printers',
            },
        ),
        migrations.CreateModel(
            name='PrintersProfile',
            fields=[
                ('profile_id', models.AutoField(primary_key=True, serialize=False)),
                ('printer_name', models.CharField(max_length=40)),
                ('template_id', models.IntegerField()),
                ('paper_bin', models.CharField(max_length=20)),
                ('offset_horz', models.FloatField()),
                ('offset_vert', models.FloatField()),
                ('creep_horz', models.FloatField()),
                ('creep_vert', models.FloatField()),
                ('units', models.CharField(max_length=20)),
                ('creator', models.CharField(max_length=15)),
            ],
            options={
                'managed': False,
                'db_table': 'printers_profile',
            },
        ),
        migrations.CreateModel(
            name='Quotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.TextField(blank=True, null=True)),
                ('text', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'quotes',
            },
        ),
        migrations.CreateModel(
            name='RefundLostItemFeeRules',
            fields=[
                ('branchcode', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('refund', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'refund_lost_item_fee_rules',
            },
        ),
        migrations.CreateModel(
            name='RepeatableHolidays',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branchcode', models.CharField(max_length=10)),
                ('weekday', models.SmallIntegerField(blank=True, null=True)),
                ('day', models.SmallIntegerField(blank=True, null=True)),
                ('month', models.SmallIntegerField(blank=True, null=True)),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'repeatable_holidays',
            },
        ),
        migrations.CreateModel(
            name='ReportsDictionary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(blank=True, null=True)),
                ('date_modified', models.DateTimeField(blank=True, null=True)),
                ('saved_sql', models.TextField(blank=True, null=True)),
                ('report_area', models.CharField(blank=True, max_length=6, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'reports_dictionary',
            },
        ),
        migrations.CreateModel(
            name='Reserves',
            fields=[
                ('reserve_id', models.AutoField(primary_key=True, serialize=False)),
                ('reservedate', models.DateField(blank=True, null=True)),
                ('notificationdate', models.DateField(blank=True, null=True)),
                ('reminderdate', models.DateField(blank=True, null=True)),
                ('cancellationdate', models.DateField(blank=True, null=True)),
                ('reservenotes', models.TextField(blank=True, null=True)),
                ('priority', models.SmallIntegerField(blank=True, null=True)),
                ('found', models.CharField(blank=True, max_length=1, null=True)),
                ('timestamp', models.DateTimeField()),
                ('waitingdate', models.DateField(blank=True, null=True)),
                ('expirationdate', models.DateField(blank=True, null=True)),
                ('lowestpriority', models.IntegerField(db_column='lowestPriority')),
                ('suspend', models.IntegerField()),
                ('suspend_until', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'reserves',
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('reviewid', models.AutoField(primary_key=True, serialize=False)),
                ('review', models.TextField(blank=True, null=True)),
                ('approved', models.IntegerField(blank=True, null=True)),
                ('datereviewed', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'reviews',
            },
        ),
        migrations.CreateModel(
            name='SavedReports',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_id', models.IntegerField(blank=True, null=True)),
                ('report', models.TextField(blank=True, null=True)),
                ('date_run', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'saved_reports',
            },
        ),
        migrations.CreateModel(
            name='SavedSql',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('borrowernumber', models.IntegerField(blank=True, null=True)),
                ('date_created', models.DateTimeField(blank=True, null=True)),
                ('last_modified', models.DateTimeField(blank=True, null=True)),
                ('savedsql', models.TextField(blank=True, null=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('report_name', models.CharField(max_length=255)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('cache_expiry', models.IntegerField()),
                ('public', models.IntegerField()),
                ('report_area', models.CharField(blank=True, max_length=6, null=True)),
                ('report_group', models.CharField(blank=True, max_length=80, null=True)),
                ('report_subgroup', models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'saved_sql',
            },
        ),
        migrations.CreateModel(
            name='SearchField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('label', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=7)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'search_field',
            },
        ),
        migrations.CreateModel(
            name='SearchHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('sessionid', models.CharField(max_length=32)),
                ('query_desc', models.CharField(max_length=255)),
                ('query_cgi', models.TextField()),
                ('type', models.CharField(max_length=16)),
                ('total', models.IntegerField()),
                ('time', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'search_history',
            },
        ),
        migrations.CreateModel(
            name='SearchMarcMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_name', models.CharField(max_length=11)),
                ('marc_type', models.CharField(max_length=7)),
                ('marc_field', models.CharField(max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'search_marc_map',
            },
        ),
        migrations.CreateModel(
            name='Serial',
            fields=[
                ('serialid', models.AutoField(primary_key=True, serialize=False)),
                ('biblionumber', models.CharField(max_length=100)),
                ('subscriptionid', models.CharField(max_length=100)),
                ('serialseq', models.CharField(max_length=100)),
                ('serialseq_x', models.CharField(blank=True, max_length=100, null=True)),
                ('serialseq_y', models.CharField(blank=True, max_length=100, null=True)),
                ('serialseq_z', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.IntegerField()),
                ('planneddate', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('publisheddate', models.DateField(blank=True, null=True)),
                ('publisheddatetext', models.CharField(blank=True, max_length=100, null=True)),
                ('claimdate', models.DateField(blank=True, null=True)),
                ('claims_count', models.IntegerField(blank=True, null=True)),
                ('routingnotes', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'serial',
            },
        ),
        migrations.CreateModel(
            name='Sessions',
            fields=[
                ('id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('a_session', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'sessions',
            },
        ),
        migrations.CreateModel(
            name='SmsProviders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('domain', models.CharField(max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'sms_providers',
            },
        ),
        migrations.CreateModel(
            name='SocialData',
            fields=[
                ('isbn', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('num_critics', models.IntegerField(blank=True, null=True)),
                ('num_critics_pro', models.IntegerField(blank=True, null=True)),
                ('num_quotations', models.IntegerField(blank=True, null=True)),
                ('num_videos', models.IntegerField(blank=True, null=True)),
                ('score_avg', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('num_scores', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'social_data',
            },
        ),
        migrations.CreateModel(
            name='SpecialHolidays',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branchcode', models.CharField(max_length=10)),
                ('day', models.SmallIntegerField()),
                ('month', models.SmallIntegerField()),
                ('year', models.SmallIntegerField()),
                ('isexception', models.SmallIntegerField()),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'special_holidays',
            },
        ),
        migrations.CreateModel(
            name='Statistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('branch', models.CharField(blank=True, max_length=10, null=True)),
                ('proccode', models.CharField(blank=True, max_length=4, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=16, null=True)),
                ('other', models.TextField(blank=True, null=True)),
                ('usercode', models.CharField(blank=True, max_length=10, null=True)),
                ('itemnumber', models.IntegerField(blank=True, null=True)),
                ('itemtype', models.CharField(blank=True, max_length=10, null=True)),
                ('location', models.CharField(blank=True, max_length=80, null=True)),
                ('borrowernumber', models.IntegerField(blank=True, null=True)),
                ('associatedborrower', models.IntegerField(blank=True, null=True)),
                ('ccode', models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'statistics',
            },
        ),
        migrations.CreateModel(
            name='Stockrotationrotas',
            fields=[
                ('rota_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('cyclical', models.IntegerField()),
                ('active', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'stockrotationrotas',
            },
        ),
        migrations.CreateModel(
            name='Stockrotationstages',
            fields=[
                ('stage_id', models.AutoField(primary_key=True, serialize=False)),
                ('position', models.IntegerField()),
                ('duration', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'stockrotationstages',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('biblionumber', models.IntegerField()),
                ('subscriptionid', models.AutoField(primary_key=True, serialize=False)),
                ('librarian', models.CharField(blank=True, max_length=100, null=True)),
                ('startdate', models.DateField(blank=True, null=True)),
                ('aqbooksellerid', models.IntegerField(blank=True, null=True)),
                ('cost', models.IntegerField(blank=True, null=True)),
                ('aqbudgetid', models.IntegerField(blank=True, null=True)),
                ('weeklength', models.IntegerField(blank=True, null=True)),
                ('monthlength', models.IntegerField(blank=True, null=True)),
                ('numberlength', models.IntegerField(blank=True, null=True)),
                ('countissuesperunit', models.IntegerField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(max_length=100)),
                ('lastvalue1', models.IntegerField(blank=True, null=True)),
                ('innerloop1', models.IntegerField(blank=True, null=True)),
                ('lastvalue2', models.IntegerField(blank=True, null=True)),
                ('innerloop2', models.IntegerField(blank=True, null=True)),
                ('lastvalue3', models.IntegerField(blank=True, null=True)),
                ('innerloop3', models.IntegerField(blank=True, null=True)),
                ('firstacquidate', models.DateField(blank=True, null=True)),
                ('manualhistory', models.IntegerField()),
                ('irregularity', models.TextField(blank=True, null=True)),
                ('skip_serialseq', models.IntegerField()),
                ('letter', models.CharField(blank=True, max_length=20, null=True)),
                ('locale', models.CharField(blank=True, max_length=80, null=True)),
                ('distributedto', models.TextField(blank=True, null=True)),
                ('internalnotes', models.TextField(blank=True, null=True)),
                ('callnumber', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=80, null=True)),
                ('branchcode', models.CharField(max_length=10)),
                ('lastbranch', models.CharField(blank=True, max_length=10, null=True)),
                ('serialsadditems', models.IntegerField()),
                ('staffdisplaycount', models.CharField(blank=True, max_length=10, null=True)),
                ('opacdisplaycount', models.CharField(blank=True, max_length=10, null=True)),
                ('graceperiod', models.IntegerField()),
                ('enddate', models.DateField(blank=True, null=True)),
                ('closed', models.IntegerField()),
                ('reneweddate', models.DateField(blank=True, null=True)),
                ('itemtype', models.CharField(blank=True, max_length=10, null=True)),
                ('previousitemtype', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'subscription',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionFrequencies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('displayorder', models.IntegerField(blank=True, null=True)),
                ('unit', models.CharField(blank=True, max_length=5, null=True)),
                ('unitsperissue', models.IntegerField()),
                ('issuesperunit', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'subscription_frequencies',
            },
        ),
        migrations.CreateModel(
            name='Subscriptionhistory',
            fields=[
                ('biblionumber', models.IntegerField()),
                ('subscriptionid', models.IntegerField(primary_key=True, serialize=False)),
                ('histstartdate', models.DateField(blank=True, null=True)),
                ('histenddate', models.DateField(blank=True, null=True)),
                ('missinglist', models.TextField()),
                ('recievedlist', models.TextField()),
                ('opacnote', models.CharField(max_length=150)),
                ('librariannote', models.CharField(max_length=150)),
            ],
            options={
                'managed': False,
                'db_table': 'subscriptionhistory',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionNumberpatterns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
                ('displayorder', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField()),
                ('numberingmethod', models.CharField(max_length=255)),
                ('label1', models.CharField(blank=True, max_length=255, null=True)),
                ('add1', models.IntegerField(blank=True, null=True)),
                ('every1', models.IntegerField(blank=True, null=True)),
                ('whenmorethan1', models.IntegerField(blank=True, null=True)),
                ('setto1', models.IntegerField(blank=True, null=True)),
                ('numbering1', models.CharField(blank=True, max_length=255, null=True)),
                ('label2', models.CharField(blank=True, max_length=255, null=True)),
                ('add2', models.IntegerField(blank=True, null=True)),
                ('every2', models.IntegerField(blank=True, null=True)),
                ('whenmorethan2', models.IntegerField(blank=True, null=True)),
                ('setto2', models.IntegerField(blank=True, null=True)),
                ('numbering2', models.CharField(blank=True, max_length=255, null=True)),
                ('label3', models.CharField(blank=True, max_length=255, null=True)),
                ('add3', models.IntegerField(blank=True, null=True)),
                ('every3', models.IntegerField(blank=True, null=True)),
                ('whenmorethan3', models.IntegerField(blank=True, null=True)),
                ('setto3', models.IntegerField(blank=True, null=True)),
                ('numbering3', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'subscription_numberpatterns',
            },
        ),
        migrations.CreateModel(
            name='Subscriptionroutinglist',
            fields=[
                ('routingid', models.AutoField(primary_key=True, serialize=False)),
                ('ranking', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'subscriptionroutinglist',
            },
        ),
        migrations.CreateModel(
            name='Suggestions',
            fields=[
                ('suggestionid', models.AutoField(primary_key=True, serialize=False)),
                ('suggestedby', models.IntegerField()),
                ('suggesteddate', models.DateField()),
                ('managedby', models.IntegerField(blank=True, null=True)),
                ('manageddate', models.DateField(blank=True, null=True)),
                ('acceptedby', models.IntegerField(blank=True, null=True)),
                ('accepteddate', models.DateField(blank=True, null=True)),
                ('rejectedby', models.IntegerField(blank=True, null=True)),
                ('rejecteddate', models.DateField(blank=True, null=True)),
                ('status', models.CharField(db_column='STATUS', max_length=10)),
                ('note', models.TextField(blank=True, null=True)),
                ('author', models.CharField(blank=True, max_length=80, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('copyrightdate', models.SmallIntegerField(blank=True, null=True)),
                ('publishercode', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateTimeField()),
                ('volumedesc', models.CharField(blank=True, max_length=255, null=True)),
                ('publicationyear', models.SmallIntegerField(blank=True, null=True)),
                ('place', models.CharField(blank=True, max_length=255, null=True)),
                ('isbn', models.CharField(blank=True, max_length=30, null=True)),
                ('biblionumber', models.IntegerField(blank=True, null=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('patronreason', models.TextField(blank=True, null=True)),
                ('branchcode', models.CharField(blank=True, max_length=10, null=True)),
                ('collectiontitle', models.TextField(blank=True, null=True)),
                ('itemtype', models.CharField(blank=True, max_length=30, null=True)),
                ('quantity', models.SmallIntegerField(blank=True, null=True)),
                ('currency', models.CharField(blank=True, max_length=10, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
                ('total', models.DecimalField(blank=True, decimal_places=6, max_digits=28, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'suggestions',
            },
        ),
        migrations.CreateModel(
            name='Systempreferences',
            fields=[
                ('variable', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('options', models.TextField(blank=True, null=True)),
                ('explanation', models.TextField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'systempreferences',
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('entry', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('weight', models.BigIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='TagsAll',
            fields=[
                ('tag_id', models.AutoField(primary_key=True, serialize=False)),
                ('term', models.CharField(max_length=255)),
                ('language', models.IntegerField(blank=True, null=True)),
                ('date_created', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'tags_all',
            },
        ),
        migrations.CreateModel(
            name='TagsApproval',
            fields=[
                ('term', models.CharField(max_length=191, primary_key=True, serialize=False)),
                ('approved', models.IntegerField()),
                ('date_approved', models.DateTimeField(blank=True, null=True)),
                ('weight_total', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'tags_approval',
            },
        ),
        migrations.CreateModel(
            name='TmpHoldsqueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('biblionumber', models.IntegerField(blank=True, null=True)),
                ('itemnumber', models.IntegerField(blank=True, null=True)),
                ('barcode', models.CharField(blank=True, max_length=20, null=True)),
                ('surname', models.TextField()),
                ('firstname', models.TextField(blank=True, null=True)),
                ('phone', models.TextField(blank=True, null=True)),
                ('borrowernumber', models.IntegerField()),
                ('cardnumber', models.CharField(blank=True, max_length=32, null=True)),
                ('reservedate', models.DateField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('itemcallnumber', models.CharField(blank=True, max_length=255, null=True)),
                ('holdingbranch', models.CharField(blank=True, max_length=10, null=True)),
                ('pickbranch', models.CharField(blank=True, max_length=10, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('item_level_request', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'tmp_holdsqueue',
            },
        ),
        migrations.CreateModel(
            name='UploadedFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hashvalue', models.CharField(max_length=40)),
                ('filename', models.TextField()),
                ('dir', models.TextField()),
                ('filesize', models.IntegerField(blank=True, null=True)),
                ('dtcreated', models.DateTimeField()),
                ('uploadcategorycode', models.TextField(blank=True, null=True)),
                ('owner', models.IntegerField(blank=True, null=True)),
                ('public', models.IntegerField(blank=True, null=True)),
                ('permanent', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'uploaded_files',
            },
        ),
        migrations.CreateModel(
            name='Userflags',
            fields=[
                ('bit', models.IntegerField(primary_key=True, serialize=False)),
                ('flag', models.CharField(blank=True, max_length=30, null=True)),
                ('flagdesc', models.CharField(blank=True, max_length=255, null=True)),
                ('defaulton', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'userflags',
            },
        ),
        migrations.CreateModel(
            name='UserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'user_permissions',
            },
        ),
        migrations.CreateModel(
            name='VendorEdiAccounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('host', models.CharField(blank=True, max_length=40, null=True)),
                ('username', models.CharField(blank=True, max_length=40, null=True)),
                ('password', models.CharField(blank=True, max_length=40, null=True)),
                ('last_activity', models.DateField(blank=True, null=True)),
                ('download_directory', models.TextField(blank=True, null=True)),
                ('upload_directory', models.TextField(blank=True, null=True)),
                ('san', models.CharField(blank=True, max_length=20, null=True)),
                ('id_code_qualifier', models.CharField(blank=True, max_length=3, null=True)),
                ('transport', models.CharField(blank=True, max_length=6, null=True)),
                ('quotes_enabled', models.IntegerField()),
                ('invoices_enabled', models.IntegerField()),
                ('orders_enabled', models.IntegerField()),
                ('responses_enabled', models.IntegerField()),
                ('auto_orders', models.IntegerField()),
                ('plugin', models.CharField(max_length=256)),
            ],
            options={
                'managed': False,
                'db_table': 'vendor_edi_accounts',
            },
        ),
        migrations.CreateModel(
            name='Virtualshelfcontents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flags', models.IntegerField(blank=True, null=True)),
                ('dateadded', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'virtualshelfcontents',
            },
        ),
        migrations.CreateModel(
            name='Virtualshelfshares',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invitekey', models.CharField(blank=True, max_length=10, null=True)),
                ('sharedate', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'virtualshelfshares',
            },
        ),
        migrations.CreateModel(
            name='Virtualshelves',
            fields=[
                ('shelfnumber', models.AutoField(primary_key=True, serialize=False)),
                ('shelfname', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.CharField(blank=True, max_length=1, null=True)),
                ('sortfield', models.CharField(blank=True, max_length=16, null=True)),
                ('lastmodified', models.DateTimeField()),
                ('created_on', models.DateTimeField()),
                ('allow_change_from_owner', models.IntegerField(blank=True, null=True)),
                ('allow_change_from_others', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'virtualshelves',
            },
        ),
        migrations.CreateModel(
            name='Z3950Servers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(blank=True, max_length=255, null=True)),
                ('port', models.IntegerField(blank=True, null=True)),
                ('db', models.CharField(blank=True, max_length=255, null=True)),
                ('userid', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('servername', models.TextField()),
                ('checked', models.SmallIntegerField(blank=True, null=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('syntax', models.CharField(blank=True, max_length=80, null=True)),
                ('timeout', models.IntegerField()),
                ('servertype', models.CharField(max_length=3)),
                ('encoding', models.TextField(blank=True, null=True)),
                ('recordtype', models.CharField(max_length=9)),
                ('sru_options', models.CharField(blank=True, max_length=255, null=True)),
                ('sru_fields', models.TextField(blank=True, null=True)),
                ('add_xslt', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'z3950servers',
            },
        ),
        migrations.CreateModel(
            name='Zebraqueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('biblio_auth_number', models.BigIntegerField()),
                ('operation', models.CharField(max_length=20)),
                ('server', models.CharField(max_length=20)),
                ('done', models.IntegerField()),
                ('time', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'zebraqueue',
            },
        ),
        migrations.CreateModel(
            name='Aqbasketusers',
            fields=[
                ('basketno', models.ForeignKey(db_column='basketno', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.Aqbasket')),
            ],
            options={
                'managed': False,
                'db_table': 'aqbasketusers',
            },
        ),
        migrations.CreateModel(
            name='Aqbudgetborrowers',
            fields=[
                ('budget', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.Aqbudgets')),
            ],
            options={
                'managed': False,
                'db_table': 'aqbudgetborrowers',
            },
        ),
        migrations.CreateModel(
            name='AqorderUsers',
            fields=[
                ('ordernumber', models.ForeignKey(db_column='ordernumber', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.Aqorders')),
            ],
            options={
                'managed': False,
                'db_table': 'aqorder_users',
            },
        ),
        migrations.CreateModel(
            name='AuthSubfieldStructure',
            fields=[
                ('authtypecode', models.ForeignKey(db_column='authtypecode', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.AuthTypes')),
                ('tagfield', models.CharField(max_length=3)),
                ('tagsubfield', models.CharField(max_length=1)),
                ('liblibrarian', models.CharField(max_length=255)),
                ('libopac', models.CharField(max_length=255)),
                ('repeatable', models.IntegerField()),
                ('mandatory', models.IntegerField()),
                ('tab', models.IntegerField(blank=True, null=True)),
                ('authorised_value', models.CharField(blank=True, max_length=10, null=True)),
                ('value_builder', models.CharField(blank=True, max_length=80, null=True)),
                ('seealso', models.CharField(blank=True, max_length=255, null=True)),
                ('isurl', models.IntegerField(blank=True, null=True)),
                ('hidden', models.IntegerField()),
                ('linkid', models.IntegerField()),
                ('kohafield', models.CharField(blank=True, max_length=45, null=True)),
                ('frameworkcode', models.CharField(max_length=10)),
                ('defaultvalue', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'auth_subfield_structure',
            },
        ),
        migrations.CreateModel(
            name='AuthTagStructure',
            fields=[
                ('authtypecode', models.ForeignKey(db_column='authtypecode', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.AuthTypes')),
                ('tagfield', models.CharField(max_length=3)),
                ('liblibrarian', models.CharField(max_length=255)),
                ('libopac', models.CharField(max_length=255)),
                ('repeatable', models.IntegerField()),
                ('mandatory', models.IntegerField()),
                ('authorised_value', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'auth_tag_structure',
            },
        ),
        migrations.CreateModel(
            name='BorrowerMessageTransportPreferences',
            fields=[
                ('borrower_message_preference', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.BorrowerMessagePreferences')),
            ],
            options={
                'managed': False,
                'db_table': 'borrower_message_transport_preferences',
            },
        ),
        migrations.CreateModel(
            name='BranchBorrowerCircRules',
            fields=[
                ('categorycode', models.ForeignKey(db_column='categorycode', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.Categories')),
                ('maxissueqty', models.IntegerField(blank=True, null=True)),
                ('maxonsiteissueqty', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'branch_borrower_circ_rules',
            },
        ),
        migrations.CreateModel(
            name='BranchesOverdrive',
            fields=[
                ('branchcode', models.ForeignKey(db_column='branchcode', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.Branches')),
                ('authname', models.CharField(max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'branches_overdrive',
            },
        ),
        migrations.CreateModel(
            name='BranchItemRules',
            fields=[
                ('itemtype', models.ForeignKey(db_column='itemtype', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.Itemtypes')),
                ('holdallowed', models.IntegerField(blank=True, null=True)),
                ('hold_fulfillment_policy', models.CharField(max_length=13)),
                ('returnbranch', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'branch_item_rules',
            },
        ),
        migrations.CreateModel(
            name='CourseInstructors',
            fields=[
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.Courses')),
            ],
            options={
                'managed': False,
                'db_table': 'course_instructors',
            },
        ),
        migrations.CreateModel(
            name='DefaultBorrowerCircRules',
            fields=[
                ('categorycode', models.ForeignKey(db_column='categorycode', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.Categories')),
                ('maxissueqty', models.IntegerField(blank=True, null=True)),
                ('maxonsiteissueqty', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'default_borrower_circ_rules',
            },
        ),
        migrations.CreateModel(
            name='DefaultBranchCircRules',
            fields=[
                ('branchcode', models.ForeignKey(db_column='branchcode', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.Branches')),
                ('maxissueqty', models.IntegerField(blank=True, null=True)),
                ('maxonsiteissueqty', models.IntegerField(blank=True, null=True)),
                ('holdallowed', models.IntegerField(blank=True, null=True)),
                ('hold_fulfillment_policy', models.CharField(max_length=13)),
                ('returnbranch', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'default_branch_circ_rules',
            },
        ),
        migrations.CreateModel(
            name='DefaultBranchItemRules',
            fields=[
                ('itemtype', models.ForeignKey(db_column='itemtype', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.Itemtypes')),
                ('holdallowed', models.IntegerField(blank=True, null=True)),
                ('hold_fulfillment_policy', models.CharField(max_length=13)),
                ('returnbranch', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'default_branch_item_rules',
            },
        ),
        migrations.CreateModel(
            name='HoldFillTargets',
            fields=[
                ('itemnumber', models.ForeignKey(db_column='itemnumber', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.Items')),
                ('item_level_request', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'hold_fill_targets',
            },
        ),
        migrations.CreateModel(
            name='HouseboundProfile',
            fields=[
                ('borrowernumber', models.ForeignKey(db_column='borrowernumber', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.Borrowers')),
                ('day', models.TextField()),
                ('frequency', models.TextField()),
                ('fav_itemtypes', models.TextField(blank=True, null=True)),
                ('fav_subjects', models.TextField(blank=True, null=True)),
                ('fav_authors', models.TextField(blank=True, null=True)),
                ('referral', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'housebound_profile',
            },
        ),
        migrations.CreateModel(
            name='HouseboundRole',
            fields=[
                ('borrowernumber', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.Borrowers')),
                ('housebound_chooser', models.IntegerField()),
                ('housebound_deliverer', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'housebound_role',
            },
        ),
        migrations.CreateModel(
            name='Illrequestattributes',
            fields=[
                ('illrequest', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.Illrequests')),
                ('type', models.CharField(max_length=200)),
                ('value', models.TextField()),
                ('readonly', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'illrequestattributes',
            },
        ),
        migrations.CreateModel(
            name='MessageTransports',
            fields=[
                ('message_attribute', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.MessageAttributes')),
                ('is_digest', models.IntegerField()),
                ('letter_module', models.CharField(max_length=20)),
                ('letter_code', models.CharField(max_length=20)),
                ('branchcode', models.CharField(max_length=10)),
            ],
            options={
                'managed': False,
                'db_table': 'message_transports',
            },
        ),
        migrations.CreateModel(
            name='Patronimage',
            fields=[
                ('borrowernumber', models.ForeignKey(db_column='borrowernumber', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.Borrowers')),
                ('mimetype', models.CharField(max_length=15)),
                ('imagefile', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'patronimage',
            },
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('module_bit', models.ForeignKey(db_column='module_bit', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.Userflags')),
                ('code', models.CharField(max_length=64)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'permissions',
            },
        ),
        migrations.CreateModel(
            name='Ratings',
            fields=[
                ('borrowernumber', models.ForeignKey(db_column='borrowernumber', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.Borrowers')),
                ('rating_value', models.IntegerField()),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'ratings',
            },
        ),
        migrations.CreateModel(
            name='SearchMarcToField',
            fields=[
                ('search_marc_map', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.SearchMarcMap')),
                ('facet', models.IntegerField(blank=True, null=True)),
                ('suggestible', models.IntegerField(blank=True, null=True)),
                ('sort', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'search_marc_to_field',
            },
        ),
        migrations.CreateModel(
            name='Serialitems',
            fields=[
                ('itemnumber', models.ForeignKey(db_column='itemnumber', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.Items')),
            ],
            options={
                'managed': False,
                'db_table': 'serialitems',
            },
        ),
        migrations.CreateModel(
            name='Stockrotationitems',
            fields=[
                ('itemnumber', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.Items')),
                ('indemand', models.IntegerField()),
                ('fresh', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'stockrotationitems',
            },
        ),
        migrations.CreateModel(
            name='TagsIndex',
            fields=[
                ('term', models.ForeignKey(db_column='term', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.TagsApproval')),
                ('weight', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'tags_index',
            },
        ),
        migrations.CreateModel(
            name='TransportCost',
            fields=[
                ('frombranch', models.ForeignKey(db_column='frombranch', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='sources_transport_costs', serialize=False, to='portal.Branches')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=6)),
                ('disable_transfer', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'transport_cost',
            },
        ),
        migrations.CreateModel(
            name='AccountOffsets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=6, max_digits=26)),
                ('created_on', models.DateTimeField()),
                ('credit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offsets_credited', to='portal.Accountlines')),
                ('debit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offsets_debited', to='portal.Accountlines')),
                ('type', models.ForeignKey(db_column='type', on_delete=django.db.models.deletion.CASCADE, to='portal.AccountOffsetTypes')),
            ],
            options={
                'managed': True,
                'db_table': 'account_offsets',
            },
        ),
    ]
